{"version":3,"sources":["mock/index.ts","services/listeners/index.ts","environment.ts","services/logger/index.ts","components/ErrorBoundary/index.tsx","services/admin/context.tsx","styles/theme.tsx","Provider.tsx","services/selectors/tutorial.ts","services/state/actions/command.ts","services/state/actions/utils/stepNext.ts","services/state/actions/utils/getNext.ts","services/state/actions/context.ts","services/selectors/position.ts","services/state/actions/testNotify.ts","services/state/actions/index.ts","services/state/actions/editor.ts","services/state/machine.ts","services/state/utils/routeString.ts","services/state/useStateMachine.tsx","components/Router/index.tsx","components/Markdown/index.tsx","components/Button/index.tsx","components/Error/index.tsx","components/Loading/index.tsx","components/ProcessMessages/index.tsx","containers/Loading/index.tsx","components/BetaBadge/index.tsx","services/admin/AdminToggle.tsx","containers/Start/getProgress.ts","containers/Start/index.tsx","services/hooks/useFetch.ts","containers/SelectTutorial/forms/TutorialSelect.tsx","containers/SelectTutorial/forms/TutorialUrl.tsx","containers/SelectTutorial/forms/TutorialFile.tsx","containers/SelectTutorial/SelectTutorialForm.tsx","containers/SelectTutorial/TutorialOverview/index.tsx","containers/SelectTutorial/LoadTutorialSummary.tsx","services/tutorial/index.ts","containers/SelectTutorial/index.tsx","containers/Tutorial/components/SideMenu.tsx","containers/Tutorial/components/Content.tsx","components/Icon/index.tsx","containers/Tutorial/components/TestStatusIcon.tsx","containers/Tutorial/components/Step.tsx","containers/Tutorial/components/Hints.tsx","containers/Tutorial/components/Steps.tsx","containers/Tutorial/components/Level.tsx","containers/Tutorial/containers/About.tsx","containers/Tutorial/containers/Review.tsx","components/TestMessage/index.tsx","containers/Tutorial/components/StepProgress.tsx","containers/Tutorial/formatLevels.ts","containers/Tutorial/components/Reset.tsx","services/hooks/useNaturalProgress.ts","containers/Tutorial/components/ProgressPie.tsx","containers/Tutorial/components/Continue.tsx","containers/Tutorial/components/ScrollContent.tsx","containers/Tutorial/components/CompletedBanner.tsx","containers/Tutorial/index.tsx","Routes.tsx","App.tsx","index.tsx"],"names":["global","acquireVsCodeApi","postMessage","event","console","log","document","addEventListener","LOG","process","toLowerCase","VERSION","DISPLAY_RUN_TEST_BUTTON","CODEROAD_DISPLAY_RUN_TEST_BUTTON","ADMIN_MODE","CODEROAD_ADMIN_MODE","logger","messages","message","JSON","stringify","ErrorBoundary","state","errorMessage","error","info","this","setState","props","children","React","AdminContext","adminMode","dispatch","AdminProvider","action","type","Error","Provider","value","theme","Consumer","styles","page","display","position","margin","width","maxWidth","minHeight","backgroundColor","overflow","locale","enUS","css","currentTutorial","tutorial","currentLevel","context","createSelector","levels","levelIndex","findIndex","l","id","levelId","currentStep","level","steps","find","s","stepId","commandStart","assign","processes","payload","p","title","concat","commandSuccess","filter","commandFail","getStepNext","length","stepIndex","nextStep","complete","getNext","nextLevel","setStart","env","loadContinuedTutorial","initPosition","selectors","updateStepPosition","updatePosition","loadNext","send","stepNext","reset","setError","errors","clearError","checkLevelCompleted","hasNoSteps","finalStepComplete","setTutorialContext","testActions","testStart","testStatus","testPass","testFail","fail","content","description","summary","testClear","testSubtasks","createActions","editorSend","startup","configureNewTutorial","continueConfig","loadLevel","step","actions","setup","loadStep","subtasks","editorLoadSolution","solution","validateSetup","requestWorkspaceSelect","editorOpenLogs","channel","runTest","runReset","runResetToPosition","syncLevelPosition","onStepComplete","tutorialId","onLevelComplete","onTutorialComplete","editorActions","commandActions","contextActions","createMachine","options","Machine","initial","machineId","sessionId","token","on","COMMAND_START","COMMAND_SUCCESS","COMMAND_FAIL","ERROR","states","Setup","Startup","onEntry","onExit","EDITOR_STARTUP_FAILED","NO_WORKSPACE","REQUEST_WORKSPACE","LOAD_STORED_TUTORIAL","target","START_NEW_TUTORIAL","START_TUTORIAL_FROM_URL","TUTORIAL_ALREADY_COMPLETE","ValidateSetup","VALIDATE_SETUP_FAILED","RETRY","WORKSPACE_LOADED","SETUP_VALIDATED","Start","NEW_TUTORIAL","CONTINUE_TUTORIAL","CONTINUE_FAILED","SelectTutorial","TUTORIAL_START","SetupNewTutorial","TUTORIAL_CONFIGURE_FAIL","TRY_AGAIN","TUTORIAL_CONFIGURED","StartTutorial","after","0","Tutorial","RUN_RESET_TO_POSITION","Level","Load","START_LEVEL","START_COMPLETED_LEVEL","Normal","LOAD_SUBTASK_RESULTS","TEST_RUNNING","STEP_SOLUTION_LOAD","OPEN_LOGS","RUN_TEST","RUN_RESET","KEY_PRESS_ENTER","TestRunning","TEST_PASS","TEST_FAIL","TEST_ERROR","StepNext","LOAD_NEXT_STEP","LEVEL_COMPLETE","LevelComplete","NEXT_LEVEL","LoadNext","NEXT_STEP","COMPLETED","Reset","3000","Completed","SELECT_TUTORIAL","activities","guards","services","delays","createOptions","createRouteString","route","paths","current","push","next","Object","keys","join","editor","useStateMachine","useMachine","sendWithLog","handler","origin","match","data","window","removeEventListener","matches","split","Router","childArray","toArray","child","warn","Route","md","MarkdownIt","breaks","html","linkify","highlight","str","lang","hl","Prism","languages","utils","escapeHtml","use","markdownEmoji","Markdown","render","className","dangerouslySetInnerHTML","__html","Button","onClick","disabled","style","size","iconSize","warning","container","flexDirection","justifyContent","alignItems","border","padding","height","textAlign","color","button","ErrorMarkdown","map","a","transition","label","LoadingComponent","tip","ProcessMessages","key","iconType","top","bottom","left","right","LoadingPage","text","showLoading","setShowHiding","timeout","setTimeout","clearTimeout","Loading","BetaBadge","useTheme","marginBottom","AdminToggle","checked","onChange","getProgress","progress","isLevelComplete","totalLevels","findLevel","currentLevelIndex","lastStepInLevel","Math","round","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","justifyItems","header","gridArea","flex","fontSize","lineHeight","fontWeight","subtitle","buttonLarge","borderRadius","borderColor","outline","boxShadow","continueTitle","buttonContainer","hiddenOptions","marginTop","borderTopLeftRadius","borderTopRightRadius","StartPage","onNew","onContinue","marginLeft","percent","hasBorder","StartPageContainer","useFetch","url","setData","loading","setLoading","fetch","res","contentType","headers","get","json","yaml","fetchData","FormItem","Item","Option","TutorialSelect","selectState","undefined","onTutorialLoad","placeholder","urlRegex","TutorialUrl","defaultUrl","setUrl","inputState","setInputState","onSubmit","e","preventDefault","defaultValue","aria-label","htmlType","form","uploadLabel","fontFamily","uploadButton","TutorialFile","accept","evt","files","uploadedFile","reader","FileReader","onload","fileJson","parse","result","onLoadSummary","readAsText","alert","formWrapper","SelectTutorialForm","Group","shape","tab","setTab","onTutorialLoadFromUrl","nav","navLink","cursor","paddingBottom","meta","flexWrap","levelList","levelSummary","paddingLeft","footer","paddingRight","zIndex","Summary","separator","onClear","index","onNext","LoadTutorialSummary","config","repo","visible","closeable","footerActions","onOk","onReturnToSelection","processTutorial","full_name","gitUrlParser","uri","branch","selectPage","SelectTutorialPage","setPage","d","TutorialOverview","Divider","drawer","menu","active","itemText","SideMenu","onMenuClose","toggleVisible","bodyStyle","placement","onClose","defaultOpenKeys","Content","Icon","role","icon","incomplete","TestStatusIcon","status","card","statusContainer","paddingTop","subtask","Step","displayAll","name","hints","hintList","hint","Hints","hintIndex","setHintIndex","isFinalHint","Steps","borderBottom","AboutPage","control","adminNav","ReviewPage","show","onResetToPosition","animationDuration","animationTimingFunction","TestMessage","setVisible","marginRight","StepProgress","isWide","useMedia","minWidth","Text","max","progressive","textRender","formatLevels","levelUI","testSummaries","subtaskIndex","subtaskStatus","completed","slice","st","incompleted","modalState","setModalState","ghost","onReset","onCancel","useNaturalProgress","start","stop","updateDuration","useState","setProgress","useEffect","difference","newProgress","ProgressPie","progressPercent","floor","buttonSubtext","Continue","defaultOpen","isComplete","scrollIndicator","ScrollContent","item","showScrollIndicator","setShowScrollIndicator","pageTopRef","pageBottomRef","hideTimeout","scrollIntoView","behavior","observer","IntersectionObserver","isIntersecting","unobserve","rootMargin","showTimeout","observe","ref","banner","headerMessage","section","optionsLeft","optionsRight","CompletedBanner","onRequestWorkspace","menuIcon","learn","textDecoration","completeFooter","testMessage","TutorialPage","menuVisible","setMenuVisible","disableOptions","About","Review","Routes","replace","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.61905053.chunk.js","sourcesContent":["// @ts-ignore\nif (!global.acquireVsCodeApi) {\n  // @ts-ignore\n  global.acquireVsCodeApi = () => ({\n    postMessage(event: string) {\n      console.log('VSCode did not load properly for CodeRoad extension', event)\n    },\n  })\n}\n","import ReactDOM from 'react-dom'\n\n// document listeners\n\ndocument.addEventListener('securitypolicyviolation', () => {\n  // TODO: add error handling\n  console.log('Security warning for resource')\n})\n","// validate .env\n// const requiredKeys = ['REACT_APP_TUTORIAL_LIST_URL']\n// for (const required of requiredKeys) {\n//   if (!process.env[required]) {\n//     throw new Error(`Missing Environmental Variable: ${required}`)\n//   }\n// }\n\nexport const DEBUG: boolean = (process.env.REACT_APP_DEBUG || '').toLowerCase() === 'true'\nexport const VERSION: string = process.env.VERSION || 'unknown'\nexport const NODE_ENV: string = process.env.NODE_ENV || 'development'\nexport const LOG: boolean = (process.env.REACT_APP_LOG || '').toLowerCase() === 'true'\nexport const TUTORIAL_LIST_URL: string = process.env.REACT_APP_TUTORIAL_LIST_URL || ''\n\n// config variables\nexport const DISPLAY_RUN_TEST_BUTTON =\n  (process.env.CODEROAD_DISPLAY_RUN_TEST_BUTTON || 'true').toLowerCase() !== 'false' // default true\n\nexport const ADMIN_MODE = (process.env.CODEROAD_ADMIN_MODE || '').toLowerCase() === 'true' // default false\n","import { LOG } from '../../environment'\n\nexport type Log = string | object | number | null\n\nconst logger = (...messages: Log[]): void => {\n  if (!LOG) {\n    return\n  }\n  // Inside vscode, you console.log does not allow more than 1 param\n  // to get around it, we can log with multiple log statements\n  for (const message of messages) {\n    if (typeof message === 'object') {\n      console.log(JSON.stringify(message))\n    } else {\n      console.log(message)\n    }\n  }\n}\n\nexport default logger\n","import * as React from 'react'\nimport logger from '../../services/logger'\n\nclass ErrorBoundary extends React.Component {\n  public state = { errorMessage: null }\n\n  public componentDidCatch(error: Error, info: any) {\n    // TODO: onError(error)\n    // Display fallback UI\n    this.setState({ errorMessage: error.message })\n    // You can also log the error to an error reporting service\n    logger('ERROR in component:', JSON.stringify(error))\n    logger('ERROR info:', JSON.stringify(info))\n  }\n\n  public render() {\n    if (this.state.errorMessage) {\n      // You can render any custom fallback UI\n      return <h1>{this.state.errorMessage}</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import * as React from 'react'\nimport { ADMIN_MODE } from '../../environment'\n\ntype Props = {\n  children: React.ReactElement\n}\n\ntype State = {\n  adminMode: boolean\n}\n\ntype Action = { type: 'ADMIN_MODE_ON' | 'ADMIN_MODE_OFF' }\n\nexport type AdminContextType = { state: State; dispatch: (action: Action) => void }\n\nconst AdminContext = React.createContext<AdminContextType>({\n  state: { adminMode: ADMIN_MODE },\n  dispatch: () => {},\n})\n\nexport default AdminContext\n\nexport const AdminProvider = (props: Props) => {\n  const [state, dispatch] = React.useReducer(\n    (state: State, action: Action) => {\n      switch (action.type) {\n        case 'ADMIN_MODE_ON':\n          return { ...state, adminMode: true }\n        case 'ADMIN_MODE_OFF':\n          return { ...state, adminMode: false }\n        default:\n          throw new Error()\n      }\n    },\n    { adminMode: ADMIN_MODE },\n  )\n  return <AdminContext.Provider value={{ state, dispatch }}>{props.children}</AdminContext.Provider>\n}\n\nexport const AdminConsumer = AdminContext.Consumer\n","// import variables from '@alifd/theme-1/variables'\n\nconst theme = {\n  '$form-element-small-height': '20px',\n  '$form-element-medium-height': '28px',\n  '$form-element-large-height': '40px',\n  '$form-element-small-font-size': '12px',\n  '$form-element-medium-font-size': '12px',\n  '$form-element-large-font-size': '14px',\n  '$form-element-small-preview-height': '20px',\n  '$form-element-medium-preview-height': '28px',\n  '$form-element-large-preview-height': '40px',\n  '$form-element-small-preview-font-size': '12px',\n  '$form-element-medium-preview-font-size': '12px',\n  '$form-element-large-preview-font-size': '16px',\n  '$form-element-small-icon-size': '12px',\n  '$form-element-medium-icon-size': '12px',\n  '$form-element-large-icon-size': '16px',\n  '$form-element-small-corner': '30px',\n  '$form-element-medium-corner': '30px',\n  '$form-element-large-corner': '30px',\n  '$mask-background': '#000000',\n  '$mask-opacity': '0.45',\n  '$popup-local-border-width': '1px',\n  '$popup-local-border-style': 'solid',\n  '$popup-local-border-color': '#DCDEE3',\n  '$popup-local-corner': '5px',\n  '$popup-local-shadow': 'none',\n  '$popup-global-border-width': '0',\n  '$popup-global-border-style': 'solid',\n  '$popup-global-border-color': '#DCDEE3',\n  '$popup-global-corner': '5px',\n  '$popup-global-shadow': '0px 2px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$color-brand1-1': '#DEE8FF',\n  '$color-brand1-6': '#5584FF',\n  '$color-brand1-9': '#3E71F7',\n  '$color-data1-1': '#00DCCD',\n  '$color-data1-2': '#506FED',\n  '$color-data1-3': '#AE66FC',\n  '$color-data1-4': '#FF445F',\n  '$color-data1-5': '#FF934D',\n  '$color-data1-6': '#FFD74D',\n  '$color-data1-7': '#4DDE6D',\n  '$color-data1-8': '#18B1F7',\n  '$color-white': '#FFFFFF',\n  '$color-black': '#000000',\n  '$color-transparent': 'transparent',\n  '$color-success-1': '#E4FDDA',\n  '$color-success-2': '#CDF2BE',\n  '$color-success-3': '#46BC15',\n  '$color-success-4': '#41A716',\n  '$color-notice-1': '#E3F2FD',\n  '$color-notice-2': '#BAD9FF',\n  '$color-notice-3': '#4494F9',\n  '$color-notice-4': '#2E7DE0',\n  '$color-warning-1': '#FFF3E0',\n  '$color-warning-2': '#FFE6BD',\n  '$color-warning-3': '#FF9300',\n  '$color-warning-4': '#EB7E10',\n  '$color-error-1': '#FFECE4',\n  '$color-error-2': '#FFC8B2',\n  '$color-error-3': '#FF3000',\n  '$color-error-4': '#E72B00',\n  '$color-help-1': '#E3FFF8',\n  '$color-help-2': '#C0ECE2',\n  '$color-help-3': '#01C1B2',\n  '$color-help-4': '#01A79A',\n  '$color-link-1': '#5584FF',\n  '$color-link-2': '#5584FF',\n  '$color-link-3': '#3E71F7',\n  '$color-other-1': '#FFEB3B',\n  '$color-other-2': '#FCCC12',\n  '$color-other-3': '#EABB06',\n  '$color-line1-1': '#E6E7EB',\n  '$color-line1-2': '#DCDEE3',\n  '$color-line1-3': '#C4C6CF',\n  '$color-line1-4': '#A0A2AD',\n  '$color-fill1-1': '#F7F8FA',\n  '$color-fill1-2': '#F2F3F7',\n  '$color-fill1-3': '#EBECF0',\n  '$color-fill1-4': '#E2E4E8',\n  '$color-text1-1': '#CCCCCC',\n  '$color-text1-2': '#999999',\n  '$color-text1-3': '#666666',\n  '$color-text1-4': '#000000',\n  '$color-disabled-1': 'lightgrey',\n  '$corner-1': '3px',\n  '$corner-2': '6px',\n  '$corner-3': '20px',\n  '$corner-circle': '50%',\n  '$corner-semicircle': '500px',\n  '$corner-zero': '0',\n  '$font-family-base': 'Roboto, \"Helvetica Neue\", Helvetica, Tahoma, Arial, \"PingFang SC\", \"Microsoft YaHei\"',\n  '$font-lineheight-1': '1.3',\n  '$font-lineheight-2': '1.5',\n  '$font-lineheight-3': '1.7',\n  '$font-size-display-3': '56px',\n  '$font-size-display-2': '48px',\n  '$font-size-display-1': '36px',\n  '$font-size-headline': '24px',\n  '$font-size-title': '20px',\n  '$font-size-subhead': '16px',\n  '$font-size-body-2': '14px',\n  '$font-size-body-1': '12px',\n  '$font-size-caption': '12px',\n  '$font-weight-1': 'lighter',\n  '$font-weight-thin': '200',\n  '$font-weight-light': '300',\n  '$font-weight-2': 'normal',\n  '$font-weight-medium': '500',\n  '$font-weight-semi-bold': '600',\n  '$font-weight-3': 'bold',\n  '$font-weight-extra-bold': '800',\n  '$font-weight-ultra-bold': '900',\n  '$icon-xxs': '8px',\n  '$icon-xs': '12px',\n  '$icon-s': '16px',\n  '$icon-m': '20px',\n  '$icon-l': '24px',\n  '$icon-xl': '32px',\n  '$icon-xxl': '48px',\n  '$icon-xxxl': '64px',\n  '$line-zero': '0',\n  '$line-1': '1px',\n  '$line-2': '2px',\n  '$line-3': '3px',\n  '$line-solid': 'solid',\n  '$line-dashed': 'dashed',\n  '$line-dotted': 'dotted',\n  '$shadow-zero': 'none',\n  '$shadow-1': '1px 1px 2px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-1-up': '0px -1px 2px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-1-right': '1px 0px 2px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-1-down': '0px 1px 2px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-1-left': '-1px 0px 2px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-2': '2px 2px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$shadow-2-up': '0px -2px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$shadow-2-right': '2px 0px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$shadow-2-down': '0px 2px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$shadow-2-left': '-2px 0px 6px 0px rgba(255, 106, 0, 0.3)',\n  '$shadow-3': '4px 4px 10px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-3-up': '0px -4px 10px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-3-right': '4px 0px 10px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-3-down': '0px 4px 10px 0px rgba(0, 0, 0, 0.1)',\n  '$shadow-3-left': '-4px 0px 10px 0px rgba(0, 0, 0, 0.1)',\n  '$footer-height': '2.2rem',\n  '$nav-height': '2rem',\n}\n\nexport type Theme = typeof theme\n\nexport default theme\n","import * as React from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { ConfigProvider } from '@alifd/next'\nimport enUS from '@alifd/next/lib/locale/en-us'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport { ThemeProvider } from 'emotion-theming'\nimport { AdminProvider } from './services/admin/context'\nimport theme, { Theme } from './styles/theme'\n\ntype Props = {\n  children: React.ReactElement\n}\n\nconst styles = {\n  page: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    position: 'relative' as 'relative',\n    margin: 0,\n    width: '100vw',\n    maxWidth: '100%',\n    minHeight: '100vh',\n    backgroundColor: theme['$color-white'],\n    overflow: 'auto',\n  }),\n}\n\nconst Provider = (props: Props) => (\n  /* @ts-ignore invalid in enUS locale typings for @alifd/next@1.20.20 https://github.com/alibaba-fusion/next/commit/e3b934b */\n  <ConfigProvider locale={enUS}>\n    <div css={styles.page}>\n      <AdminProvider>\n        <ErrorBoundary>\n          <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\n        </ErrorBoundary>\n      </AdminProvider>\n    </div>\n  </ConfigProvider>\n)\n\nexport default Provider\n","import { createSelector } from 'reselect'\nimport { MachineContext } from 'typings'\nimport * as TT from 'typings/tutorial'\n\nexport const currentTutorial = ({ tutorial }: MachineContext): TT.Tutorial => {\n  if (!tutorial) {\n    const error = new Error('Tutorial not found')\n    // TODO: onError(error)\n    throw error\n  }\n  return tutorial\n}\n\nexport const currentLevel = (context: MachineContext): TT.Level =>\n  createSelector(\n    currentTutorial,\n    (tutorial: TT.Tutorial): TT.Level => {\n      // merge in the updated position\n      // sent with the test to ensure consistency\n      const levels: TT.Level[] = tutorial.levels\n\n      const levelIndex = levels.findIndex((l: TT.Level) => l.id === context.position.levelId)\n      if (levelIndex < 0) {\n        const error = new Error(`Level not found when selecting level for ${tutorial.id}`)\n        // TODO: onError(error)\n        throw error\n      }\n      const level: TT.Level = levels[levelIndex]\n\n      return level\n    },\n  )(context)\n\nexport const currentStep = (context: MachineContext): TT.Step | null =>\n  createSelector(currentLevel, (level: TT.Level): TT.Step | null => {\n    const steps: TT.Step[] = level.steps\n    const step: TT.Step | null = steps.find((s: TT.Step) => s.id === context.position.stepId) || null\n    return step\n  })(context)\n","import * as T from 'typings'\nimport { assign } from 'xstate'\n\nexport default {\n  commandStart: assign({\n    processes: (context: T.MachineContext, event: T.MachineEvent): any => {\n      let processes: T.ProcessEvent[] = context.processes\n      const process: T.ProcessEvent = event.payload.process\n      const isRunning = processes.find((p) => p.title === process.title)\n      if (!isRunning) {\n        processes = processes.concat(process)\n      }\n      return processes\n    },\n  }),\n  commandSuccess: assign({\n    processes: (context: T.MachineContext, event: T.MachineEvent): any => {\n      const processes: T.ProcessEvent[] = context.processes\n      const process: T.ProcessEvent = event.payload.process\n      return processes.filter((p) => p.title !== process.title)\n    },\n  }),\n  commandFail: assign({\n    processes: (context: T.MachineContext, event: T.MachineEvent): any => {\n      const processes: T.ProcessEvent[] = context.processes\n      const process: T.ProcessEvent = event.payload.process\n      return processes.filter((p) => p.title !== process.title)\n    },\n  }),\n}\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\nimport logger from '../../../../services/logger'\n\nconst getStepNext = (position: T.Position, level: TT.Level): T.Action => {\n  const { steps } = level\n  if (steps.length) {\n    const stepIndex = steps.findIndex((s: TT.Step) => s.id === position.stepId)\n    const finalStepIndex = steps.length - 1\n    if (stepIndex < finalStepIndex) {\n      const nextStep = steps[stepIndex + 1]\n      return {\n        type: 'LOAD_NEXT_STEP',\n        payload: {\n          position: { levelId: position.levelId, stepId: nextStep.id, complete: false },\n        },\n      }\n    }\n  }\n  return {\n    type: 'LEVEL_COMPLETE',\n  }\n}\n\nexport default getStepNext\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\n\nconst getNext = (position: T.Position, level: TT.Level, levels: TT.Level[]) => {\n  const steps: TT.Step[] = level.steps\n\n  if (steps.length && position.stepId) {\n    const stepIndex = steps.findIndex((s: TT.Step) => s.id === position.stepId)\n    const finalStep = stepIndex > -1 && stepIndex === steps.length - 1\n    const hasNextStep = !finalStep\n\n    // NEXT STEP\n    if (hasNextStep) {\n      const nextPosition = {\n        levelId: position.levelId,\n        stepId: steps[stepIndex + (position.complete ? 1 : 0)].id,\n        complete: false,\n      }\n      return { type: 'NEXT_STEP', payload: nextPosition }\n    }\n  }\n\n  const levelIndex = levels.findIndex((l: TT.Level) => l.id === position.levelId)\n  const finalLevel = levelIndex > -1 && levelIndex === levels.length - 1\n  const hasNextLevel = !finalLevel\n\n  // NEXT LEVEL\n  if (hasNextLevel) {\n    const nextLevel = levels[levelIndex + 1]\n    const nextPosition = {\n      levelId: nextLevel.id,\n      stepId: nextLevel.steps.length ? nextLevel.steps[0].id : null,\n      complete: false,\n    }\n    return { type: 'NEXT_LEVEL', payload: nextPosition }\n  }\n\n  // COMPLETED\n  return { type: 'COMPLETED' }\n}\n\nexport default getNext\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\nimport * as E from 'typings/error'\nimport { assign, send } from 'xstate'\nimport * as selectors from '../../selectors'\nimport getStepNext from './utils/stepNext'\nimport getNext from './utils/getNext'\nimport logger from 'services/logger'\nimport errors from '../../errors/en.json'\n\nexport const setStart = assign({\n  env: (context: T.MachineContext, event: T.MachineEvent) => {\n    return {\n      ...context.env,\n      ...event.payload.env,\n    }\n  },\n})\n\nexport const loadContinuedTutorial = assign((context: T.MachineContext, event: T.MachineEvent): any => ({\n  env: {\n    ...context.env,\n    ...event.payload.env,\n  },\n  tutorial: event.payload.tutorial,\n  position: event.payload.position,\n}))\n\nexport const initPosition = assign({\n  position: (context: T.MachineContext, event: T.MachineEvent): any => {\n    const position: T.Position = selectors.initialPosition(context)\n    return position\n  },\n})\n\nexport const updateStepPosition = assign({\n  position: (context: T.MachineContext, event: T.MachineEvent): any => {\n    logger('updateStepPosition', event)\n    return event.payload.position\n  },\n})\n\nexport const updatePosition = assign({\n  position: (context: T.MachineContext, event: T.MachineEvent): any => {\n    return event.payload\n  },\n})\n\nexport const loadNext = send(\n  (context: T.MachineContext): T.Action => {\n    const level = selectors.currentLevel(context)\n    return getNext(context.position, level, context.tutorial?.levels || [])\n  },\n)\n\nexport const stepNext = send(\n  (context: T.MachineContext): T.Action => {\n    const level: TT.Level = selectors.currentLevel(context)\n    return getStepNext(context.position, level)\n  },\n)\n\nexport const reset = assign({\n  tutorial() {\n    return null\n  },\n  position(): T.Position {\n    const position: T.Position = selectors.defaultPosition()\n    return position\n  },\n  processes() {\n    return []\n  },\n})\n\nexport const setError = assign({\n  error: (context: T.MachineContext, event: T.MachineEvent): any => {\n    const error: string | null | E.ErrorMessage = event.payload.error\n    if (error) {\n      if (typeof error === 'string') {\n        console.log(`ERROR: ${error}`)\n        return error\n      } else if (error.type) {\n        const errorMessage = errors[error.type]\n        const content = errorMessage || ''\n        const message = `${content}\\n\\n${error.message || ''}`\n        console.log(`ERROR: ${message}`)\n        return {\n          ...error,\n          message,\n        }\n      }\n    }\n    return null\n  },\n})\n\nexport const clearError = assign({\n  error: (): any => null,\n})\n\nexport const checkLevelCompleted = send((context: T.MachineContext) => {\n  const currentLevel = selectors.currentLevel(context)\n  let hasNoSteps = false\n  let finalStepComplete = false\n  if (!currentLevel.steps.length) {\n    hasNoSteps = true\n  } else {\n    const finalStep = currentLevel.steps[currentLevel.steps.length - 1]\n    finalStepComplete = finalStep.id === context.position.stepId && context.position.complete\n  }\n\n  return {\n    type: hasNoSteps || finalStepComplete ? 'START_COMPLETED_LEVEL' : 'START_LEVEL',\n  }\n})\n\nexport const setTutorialContext = assign({\n  tutorial: (context: T.MachineContext, event: T.MachineEvent): any => {\n    return event.payload.tutorial\n  },\n})\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\n\nexport const defaultPosition = (): T.Position => ({\n  levelId: '',\n  stepId: null,\n  complete: false,\n})\n\nexport const initialPosition = (context: T.MachineContext) => {\n  if (!context.tutorial) {\n    throw new Error('Tutorial not found at initialPosition check')\n  }\n  const level: TT.Level = context.tutorial.levels[0]\n  const position: T.Position = {\n    levelId: level.id,\n    stepId: level.steps.length ? level.steps[0].id : null,\n    complete: false,\n  }\n  return position\n}\n","import * as CR from 'typings'\nimport { assign, ActionFunctionMap } from 'xstate'\n\nconst testActions: ActionFunctionMap<CR.MachineContext, CR.MachineEvent> = {\n  // @ts-ignore\n  testStart: assign({\n    testStatus: () => ({\n      type: 'loading',\n      title: 'Test running...',\n    }),\n  }),\n  // @ts-ignore\n  testPass: assign({\n    testStatus: () => ({\n      type: 'success',\n      title: 'Success!',\n    }),\n  }),\n  // @ts-ignore\n  testFail: assign({\n    testStatus: (context, event) => ({\n      type: 'warning',\n      title: event.payload.fail.title,\n      content: event.payload.fail.description,\n      summary: event.payload.fail.summary,\n    }),\n  }),\n  // @ts-ignore\n  testClear: assign({\n    testStatus: null,\n  }),\n  // @ts-ignore\n  testSubtasks: assign({\n    testStatus: (context, event) => ({\n      type: 'hidden',\n      title: '',\n      content: '',\n      summary: event.payload.summary,\n    }),\n  }),\n}\n\nexport default testActions\n","import editorActions from './editor'\nimport commandActions from './command'\nimport * as contextActions from './context'\nimport testActions from './testNotify'\n\nconst createActions = (editorSend: any) => ({\n  ...editorActions(editorSend),\n  ...commandActions,\n  ...contextActions,\n  ...testActions,\n})\n\nexport default createActions\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\nimport { assign } from 'xstate'\nimport * as selectors from '../../selectors'\n\nexport default (editorSend: any) => ({\n  startup(): void {\n    editorSend({\n      type: 'EDITOR_STARTUP',\n    })\n  },\n  configureNewTutorial(context: T.MachineContext) {\n    editorSend({\n      type: 'EDITOR_TUTORIAL_CONFIG',\n      payload: {\n        // pass position because current stepId or first stepId will be empty\n        tutorial: context.tutorial,\n      },\n    })\n  },\n  continueConfig(context: T.MachineContext) {\n    editorSend({\n      type: 'EDITOR_TUTORIAL_CONTINUE_CONFIG',\n      payload: {\n        // pass position because current stepId or first stepId will be empty\n        position: context.position,\n      },\n    })\n  },\n  loadLevel(context: T.MachineContext): void {\n    const level: TT.Level = selectors.currentLevel(context)\n    const step: TT.Step | null = selectors.currentStep(context)\n    // load step actions\n    editorSend({\n      type: 'EDITOR_LEVEL_ENTER',\n      payload: {\n        position: {\n          stepId: step?.id || null,\n          levelId: level.id,\n          complete: false,\n        },\n        actions: level.setup,\n      },\n    })\n  },\n  loadStep(context: T.MachineContext): void {\n    const step: TT.Step | null = selectors.currentStep(context)\n    if (step && step.setup) {\n      // load step actions\n      editorSend({\n        type: 'EDITOR_STEP_ENTER',\n        payload: {\n          // set position here\n          position: {\n            stepId: step.id,\n            levelId: context.position.levelId,\n            complete: false,\n          },\n          actions: step.setup,\n        },\n      })\n\n      if (step.subtasks) {\n        // load subtask summary by running tests and parsing result\n        editorSend({\n          type: 'EDITOR_RUN_TEST',\n          payload: {\n            position: context.position,\n          },\n        })\n      }\n    }\n  },\n  editorLoadSolution(context: T.MachineContext): void {\n    const step: TT.Step | null = selectors.currentStep(context)\n    // tell editor to load solution commit\n    if (step && step.solution) {\n      editorSend({\n        type: 'EDITOR_SOLUTION_ENTER',\n        payload: {\n          position: {\n            stepId: step.id,\n            levelId: context.position.levelId,\n            complete: false,\n          },\n          actions: step.solution,\n        },\n      })\n    }\n  },\n  validateSetup() {\n    editorSend({\n      type: 'EDITOR_VALIDATE_SETUP',\n    })\n  },\n  requestWorkspaceSelect() {\n    editorSend({\n      type: 'EDITOR_REQUEST_WORKSPACE',\n    })\n  },\n  editorOpenLogs(context: T.MachineContext, event: T.MachineEvent): void {\n    editorSend({\n      type: 'EDITOR_OPEN_LOGS',\n      payload: { channel: event.payload.channel },\n    })\n  },\n  runTest(context: T.MachineContext) {\n    editorSend({\n      type: 'EDITOR_RUN_TEST',\n      payload: { position: context.position },\n    })\n  },\n  runReset(): void {\n    editorSend({\n      type: 'EDITOR_RUN_RESET_LATEST',\n    })\n  },\n  // @ts-ignore\n  runResetToPosition: assign({\n    position: (context: T.MachineContext, event: T.MachineEvent) => {\n      editorSend({\n        type: 'EDITOR_RUN_RESET_POSITION',\n        payload: event.payload,\n      })\n      return event.payload.position\n    },\n  }),\n  syncLevelPosition(context: T.MachineContext): void {\n    editorSend({\n      type: 'EDITOR_SYNC_POSITION',\n      payload: {\n        position: context.position,\n      },\n    })\n  },\n  onStepComplete(context: T.MachineContext): void {\n    editorSend({\n      type: 'EDITOR_STEP_COMPLETE',\n      payload: {\n        tutorialId: context.tutorial?.id || '',\n        levelId: context.position.levelId,\n        stepId: context.position.stepId,\n      },\n    })\n  },\n  onLevelComplete(context: T.MachineContext): void {\n    editorSend({\n      type: 'EDITOR_LEVEL_COMPLETE',\n      payload: {\n        tutorialId: context.tutorial?.id || '',\n        levelId: context.position.levelId,\n      },\n    })\n  },\n  onTutorialComplete(context: T.MachineContext): void {\n    editorSend({\n      type: 'EDITOR_TUTORIAL_COMPLETE',\n      payload: {\n        tutorialId: context.tutorial?.id || '',\n      },\n    })\n  },\n})\n","import * as CR from 'typings'\nimport { Machine, MachineOptions } from 'xstate'\nimport createActions from './actions'\n\nconst createOptions = ({ editorSend }: any): MachineOptions<CR.MachineContext, CR.MachineEvent> => ({\n  activities: {},\n  // @ts-ignore\n  actions: createActions(editorSend),\n  guards: {},\n  services: {},\n  delays: {},\n})\n\nexport const createMachine = (options: any) => {\n  return Machine<CR.MachineContext, CR.MachineStateSchema, CR.MachineEvent>(\n    {\n      id: 'root',\n      initial: 'Setup',\n      context: {\n        error: null,\n        env: { machineId: '', sessionId: '', token: '' },\n        tutorial: null,\n        position: { levelId: '', stepId: null, complete: false },\n        processes: [],\n        testStatus: null,\n      },\n      on: {\n        // track commands\n        COMMAND_START: {\n          actions: ['commandStart'],\n        },\n        COMMAND_SUCCESS: {\n          actions: ['commandSuccess'],\n        },\n        COMMAND_FAIL: {\n          actions: ['commandFail'],\n        },\n        ERROR: {\n          // TODO: missing clearError\n          actions: ['setError'],\n        },\n      },\n      states: {\n        Setup: {\n          initial: 'Startup',\n          states: {\n            Startup: {\n              onEntry: ['startup'],\n              onExit: ['clearError'],\n              on: {\n                EDITOR_STARTUP_FAILED: {\n                  actions: ['setError'],\n                },\n                NO_WORKSPACE: {\n                  actions: ['setError'],\n                },\n                REQUEST_WORKSPACE: {\n                  actions: 'requestWorkspaceSelect',\n                },\n                LOAD_STORED_TUTORIAL: {\n                  target: 'Start',\n                  actions: ['loadContinuedTutorial'],\n                },\n                START_NEW_TUTORIAL: {\n                  target: 'Start',\n                  actions: ['setStart'],\n                },\n                START_TUTORIAL_FROM_URL: {\n                  target: 'SetupNewTutorial',\n                  actions: ['setTutorialContext'],\n                },\n                TUTORIAL_ALREADY_COMPLETE: {\n                  target: 'Start',\n                  actions: ['setStart'],\n                },\n              },\n            },\n            ValidateSetup: {\n              onEntry: ['validateSetup'],\n              onExit: ['clearError'],\n              on: {\n                VALIDATE_SETUP_FAILED: {\n                  actions: ['setError'],\n                },\n                RETRY: 'ValidateSetup',\n                REQUEST_WORKSPACE: {\n                  actions: 'requestWorkspaceSelect',\n                },\n                WORKSPACE_LOADED: 'ValidateSetup',\n                SETUP_VALIDATED: 'SelectTutorial',\n              },\n            },\n            Start: {\n              onExit: ['clearError'],\n              on: {\n                NEW_TUTORIAL: 'ValidateSetup',\n                CONTINUE_TUTORIAL: {\n                  target: '#tutorial',\n                  actions: ['continueConfig'],\n                },\n                CONTINUE_FAILED: {\n                  actions: ['setError'],\n                },\n              },\n            },\n            SelectTutorial: {\n              id: 'select-new-tutorial',\n              on: {\n                TUTORIAL_START: {\n                  target: 'SetupNewTutorial',\n                  actions: ['setTutorialContext'],\n                },\n              },\n            },\n            SetupNewTutorial: {\n              onEntry: ['configureNewTutorial'],\n              onExit: ['clearError'],\n              on: {\n                TUTORIAL_CONFIGURE_FAIL: {\n                  actions: ['setError'],\n                },\n                TRY_AGAIN: 'SetupNewTutorial',\n                TUTORIAL_CONFIGURED: 'StartTutorial',\n              },\n            },\n            StartTutorial: {\n              onEntry: ['initPosition'],\n              after: {\n                0: '#tutorial',\n              },\n            },\n          },\n        },\n        Tutorial: {\n          id: 'tutorial',\n          initial: 'Level',\n          on: {\n            RUN_RESET_TO_POSITION: {\n              actions: ['runResetToPosition'],\n              target: 'Tutorial.Level',\n            },\n          },\n          states: {\n            Level: {\n              initial: 'Load',\n              states: {\n                Load: {\n                  onEntry: ['loadLevel', 'loadStep', 'checkLevelCompleted'],\n                  on: {\n                    START_LEVEL: 'Normal',\n                    START_COMPLETED_LEVEL: 'LevelComplete',\n                  },\n                },\n                Normal: {\n                  id: 'tutorial-level',\n                  on: {\n                    LOAD_SUBTASK_RESULTS: {\n                      actions: ['testSubtasks'],\n                    },\n                    TEST_RUNNING: 'TestRunning',\n                    STEP_SOLUTION_LOAD: {\n                      actions: ['editorLoadSolution'],\n                    },\n                    OPEN_LOGS: {\n                      actions: ['editorOpenLogs'],\n                    },\n                    RUN_TEST: {\n                      actions: ['runTest'],\n                    },\n                    RUN_RESET: '#reset-tutorial',\n                    KEY_PRESS_ENTER: {\n                      actions: ['runTest'],\n                    },\n                  },\n                },\n                TestRunning: {\n                  onEntry: ['testStart'],\n                  on: {\n                    TEST_PASS: {\n                      target: 'StepNext',\n                      actions: ['onStepComplete', 'testPass', 'updateStepPosition'],\n                    },\n                    TEST_FAIL: {\n                      target: 'Normal',\n                      actions: ['testFail'],\n                    },\n                    TEST_ERROR: {\n                      target: 'Normal',\n                      actions: ['testFail'],\n                    },\n                  },\n                },\n                StepNext: {\n                  onEntry: ['stepNext'],\n                  on: {\n                    LOAD_NEXT_STEP: {\n                      target: 'Normal',\n                      actions: ['loadStep', 'updateStepPosition'],\n                    },\n                    LEVEL_COMPLETE: {\n                      target: 'LevelComplete',\n                    },\n                  },\n                },\n                LevelComplete: {\n                  onEntry: ['onLevelComplete'],\n                  onExit: ['testClear', 'incrementLevel'],\n                  on: {\n                    NEXT_LEVEL: 'LoadNext',\n                    KEY_PRESS_ENTER: 'LoadNext',\n                  },\n                },\n                LoadNext: {\n                  id: 'tutorial-load-next',\n                  onEntry: ['loadNext'],\n                  onExit: ['syncLevelPosition'],\n                  on: {\n                    NEXT_STEP: {\n                      target: 'Load',\n                      actions: ['updatePosition'],\n                    },\n                    NEXT_LEVEL: {\n                      target: 'Load',\n                      actions: ['updatePosition'],\n                    },\n                    COMPLETED: {\n                      target: '#completed-tutorial',\n                      actions: ['onTutorialComplete'],\n                    },\n                  },\n                },\n              },\n            },\n            Reset: {\n              id: 'reset-tutorial',\n              onEntry: ['runReset'],\n              onExit: ['testClear'],\n              after: {\n                3000: '#tutorial',\n              },\n            },\n            Completed: {\n              id: 'completed-tutorial',\n              on: {\n                SELECT_TUTORIAL: {\n                  target: '#select-new-tutorial',\n                  actions: ['reset'],\n                },\n                REQUEST_WORKSPACE: {\n                  actions: 'requestWorkspaceSelect',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    createOptions(options),\n  )\n}\n","const createRouteString = (route: object | string): string => {\n  if (typeof route === 'string') {\n    return route\n  }\n  const paths: string[] = []\n  let current: object | string | undefined = route\n  while (current) {\n    // current is final string value\n    if (typeof current === 'string') {\n      paths.push(current)\n      break\n    }\n\n    // current is object\n    const next: string = Object.keys(current)[0]\n    paths.push(next)\n    // @ts-ignore\n    current = current[next]\n  }\n\n  return paths.join('.')\n}\n\nexport default createRouteString\n","import * as React from 'react'\nimport * as T from 'typings' // eslint-disable-line\nimport { useMachine } from '@xstate/react'\nimport { createMachine } from './machine'\nimport createRouteString from './utils/routeString'\nimport logger from '../logger'\n\ninterface Output {\n  context: T.MachineContext\n  route: string\n  send: (action: any) => void\n}\n\ndeclare let acquireVsCodeApi: any\n\nconst editor = acquireVsCodeApi()\nconst editorSend = (action: T.Action) => {\n  logger(`TO EXT: \"${action.type}\"`)\n  return editor.postMessage(action)\n}\n\n// router finds first state match of <Route path='' />\nconst useStateMachine = (): Output => {\n  const [state, send] = useMachine<T.MachineContext, any>(createMachine({ editorSend }))\n\n  const sendWithLog = (action: T.Action): void => {\n    logger(`SEND: ${action.type}`, action)\n    send(action)\n  }\n\n  // event bus listener\n  React.useEffect(() => {\n    const listener = 'message'\n    // propograte channel event to state machine\n    const handler = (event: any) => {\n      // ensure events are coming from coderoad webview\n      if (!event.origin.match(/^vscode-webview/)) {\n        return\n      }\n      // NOTE: must call event.data, cannot destructure. VSCode acts odd\n      const action = event.data\n      sendWithLog(action)\n    }\n    window.addEventListener(listener, handler)\n    return () => {\n      window.removeEventListener(listener, handler)\n    }\n  }, []) // eslint-disable-line\n\n  // convert route to a string to avoid unnecessary React re-renders on deeply nested objects\n  const route = createRouteString(state.value)\n  logger(`STATE: \"${route}\"`)\n\n  return {\n    context: state.context,\n    route,\n    send: sendWithLog,\n  }\n}\n\nexport default useStateMachine\n","import * as React from 'react'\n\ninterface RouterProps {\n  children: React.ReactChildren | React.ReactChildren[]\n  route: string\n}\n\n// check if a route string (eg. 'a.b.c')\n// matches a paths object ({ a: { b: { c: true }}})\nconst matches = (route: string, paths: object): boolean => {\n  const keys: string[] = route.split('.')\n  let current: any = paths || {}\n  // if the key throws, there is no match\n  for (const key of keys) {\n    const next = current[key]\n    if (next) {\n      // exit early if property value is true\n      if (next === true) {\n        return true\n      }\n      current = next\n      continue\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nexport const Router = ({ children, route }: RouterProps) => {\n  // @ts-ignore may accept string as well as element\n  const childArray: React.ReactElement[] = React.Children.toArray(children)\n  for (const child of childArray) {\n    // match path\n    const { paths } = child.props\n    let pathMatch = matches(route, paths)\n\n    if (pathMatch) {\n      return child.props.children\n    }\n  }\n  const message = `No Route matches for \"${JSON.stringify(route)}\"`\n  // TODO: onError(new Error(message))\n  console.warn(message)\n  return null\n}\n\ninterface RouteProps {\n  children: any\n  paths: object\n}\n\nexport const Route = ({ children }: RouteProps) => children\n","import MarkdownIt from 'markdown-it'\nimport Prism from 'prismjs'\nimport { css, jsx, InterpolationWithTheme } from '@emotion/core'\n// @ts-ignore no types for package\nimport markdownEmoji from 'markdown-it-emoji'\nimport * as React from 'react'\n// load prism styles & language support\nimport './prism'\n\n// markdown highlighter instance\nconst md: MarkdownIt = new MarkdownIt({\n  breaks: true,\n  html: true,\n  linkify: true,\n  highlight(str, lang) {\n    let hl\n\n    try {\n      hl = Prism.highlight(str, Prism.languages[lang], lang)\n    } catch (error) {\n      console.error(error)\n      hl = md.utils.escapeHtml(str)\n    }\n\n    return `<pre class=\"language-${lang}\"><code class=\"language-${lang}\">${hl}</code></pre>`\n  },\n})\n  // add emoji: https://github.com/markdown-it/markdown-it-emoji\n  .use(markdownEmoji)\n\n// const mdFeatures = [\n//   'table',\n//   'code',\n//   'fence',\n//   'blockquote',\n//   'hr',\n//   'list',\n//   'reference',\n//   'heading',\n//   'lheading',\n//   'html_block',\n//   'paragraph',\n//   'html_inline',\n//   'autolink',\n//   'link',\n//   'image',\n// ]\n\n// TODO: markdownIt with rules disabling most features\n// const minimalMarkdownIt = new MarkdownIt({\n//   breaks: false,\n//   html: true,\n//   linkify: false,\n// }).disable(mdFeatures)\n\ninterface Props {\n  children: string\n  minimal?: boolean\n}\n\nconst Markdown = (props: Props) => {\n  let html: string\n  // TODO: set md to minimal rule set if specified\n  try {\n    html = md.render(props.children)\n  } catch (error) {\n    const message = `Failed to parse markdown for ${props.children}`\n    // TODO: onError(new Error(message))\n    console.log(message)\n    html = `<div style='background-color: #FFB81A; padding: 0.5rem;'>\n\t\t\t<strong style='padding-bottom: 0.5rem;'>ERROR: Failed to parse markdown</strong>\n\t\t\t<p>${props.children}</p>\n\t\t</div>`\n  }\n  // TODO sanitize markdown or HTML\n  return <span className=\"coderoad-markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default Markdown\n","import { Button as AlifdButton } from '@alifd/next'\nimport * as React from 'react'\n\ninterface Props {\n  style?: React.CSSProperties\n  children: string | React.ReactNode\n  disabled?: boolean\n  type?: 'primary' | 'secondary' | 'normal'\n  onClick?: () => void\n  size?: 'small' | 'medium' | 'large'\n  iconSize?: 'xxs' | 'xs' | 'small' | 'medium' | 'large' | 'xl' | 'xxl' | 'xxxl'\n  warning?: boolean\n}\n\nconst Button = (props: Props) => (\n  <AlifdButton\n    onClick={props.onClick}\n    type={props.type}\n    disabled={props.disabled}\n    style={props.style}\n    size={props.size}\n    iconSize={props.iconSize}\n    warning={props.warning}\n  >\n    {props.children}\n  </AlifdButton>\n)\n\nexport default Button\n","import * as React from 'react'\nimport * as E from 'typings/error'\nimport * as T from 'typings'\nimport { css, jsx } from '@emotion/core'\nimport Markdown from '../Markdown'\nimport Button from '../../components/Button'\nimport { Theme } from '../../styles/theme'\n\nconst styles = {\n  container: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n    border: `0.5rem solid ${theme['$color-error-2']}`,\n    padding: '1rem',\n    width: '100vw',\n    maxWidth: '100%',\n    height: '100vh',\n  }),\n  content: (theme: Theme) => ({\n    textAlign: 'center' as 'center',\n    color: theme['$color-text1-3'],\n  }),\n  options: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    alignItems: 'center',\n  },\n  button: {\n    margin: '0.5rem',\n    width: '10rem',\n  },\n}\n\ninterface Props {\n  error: E.ErrorMessage\n  send: (action: T.Action) => void\n}\n\nconst ErrorMarkdown = ({ error, send }: Props) => {\n  React.useEffect(() => {\n    if (error) {\n      // log error\n      console.log(`ERROR in markdown: ${error.message}`)\n    }\n  }, [error])\n\n  if (!error) {\n    return null\n  }\n\n  return (\n    <div css={styles.container}>\n      <h1>Oops!</h1>\n      <div css={styles.content}>\n        <Markdown>{error.message}</Markdown>\n      </div>\n      <br />\n      <br />\n      {/* Actions */}\n      <div css={styles.options}>\n        {error.actions &&\n          error.actions.map((a) => (\n            <Button type=\"normal\" warning style={styles.button} onClick={() => send({ type: a.transition })}>\n              {a.label}\n            </Button>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ErrorMarkdown\n","import { Loading } from '@alifd/next'\nimport * as React from 'react'\n\ninterface Props {\n  message: string\n}\n\nconst LoadingComponent = ({ message }: Props) => {\n  return <Loading tip={message} />\n}\n\nexport default LoadingComponent\n","import { Message } from '@alifd/next'\nimport * as React from 'react'\nimport * as T from 'typings'\nimport { css, jsx } from '@emotion/core'\n\ninterface Props {\n  processes: T.ProcessEvent[]\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column' as 'column',\n  },\n}\n\n// display a list of active processes\nconst ProcessMessages = ({ processes }: Props) => {\n  if (!processes.length) {\n    return null\n  }\n  return (\n    <div css={styles.container}>\n      {processes.map((process) => (\n        <Message key={process.title} type=\"notice\" iconType=\"loading\" size=\"medium\" title={process.title}>\n          {process.description}\n        </Message>\n      ))}\n    </div>\n  )\n}\n\nexport default ProcessMessages\n","import * as React from 'react'\nimport * as T from 'typings'\nimport { css, jsx } from '@emotion/core'\nimport Loading from '../../components/Loading'\nimport ProcessMessages from 'components/ProcessMessages'\n\ninterface Props {\n  text: string\n  processes?: T.ProcessEvent[]\n}\n\nconst styles = {\n  page: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    alignItems: 'center' as 'center',\n    justifyContent: 'center' as 'center',\n    position: 'absolute' as 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  processes: {\n    padding: '0 1rem',\n    position: 'absolute' as 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n}\n\nconst LoadingPage = ({ text, processes }: Props) => {\n  const [showLoading, setShowHiding] = React.useState<boolean>(!!processes?.length)\n\n  React.useEffect(() => {\n    // wait some time before showing loading indicator\n    const timeout = setTimeout(() => {\n      setShowHiding(true)\n    }, 500)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  // don't flash loader\n  if (!showLoading) {\n    return null\n  }\n  return (\n    <div css={styles.page}>\n      <Loading message={text} />\n      {processes && processes.length ? (\n        <div css={styles.processes}>\n          <ProcessMessages processes={processes} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default LoadingPage\n","import * as React from 'react'\nimport { useTheme } from 'emotion-theming'\nimport { Badge } from '@alifd/next'\nimport { Theme } from '../../styles/theme'\n\nconst styles = {\n  betaBadge: (theme: Theme) => ({\n    backgroundColor: theme['$color-brand1-9'],\n    color: theme['$color-white'],\n  }),\n}\n\ntype Props = {\n  children: React.ReactElement | string\n}\n\nconst BetaBadge = ({ children }: Props) => {\n  const theme: Theme = useTheme()\n  return (\n    <Badge content=\"beta\" style={styles.betaBadge(theme)}>\n      {children}&nbsp;&nbsp;\n    </Badge>\n  )\n}\n\nexport default BetaBadge\n","import * as React from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { Switch } from '@alifd/next'\nimport AdminContext, { AdminContextType } from './context'\n\nconst styles = {\n  container: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n  },\n  label: {\n    marginBottom: '4px',\n  },\n}\n\ntype Props = {}\n\nconst AdminToggle = (props: Props) => {\n  const { state, dispatch } = React.useContext<AdminContextType>(AdminContext)\n  return (\n    <div css={styles.container}>\n      <div css={styles.label}>Admin Mode</div>\n      <Switch\n        checked={state.adminMode}\n        onChange={(checked: boolean) => dispatch({ type: checked ? 'ADMIN_MODE_ON' : 'ADMIN_MODE_OFF' })}\n      />\n    </div>\n  )\n}\n\nexport default AdminToggle\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\n\nconst getProgress = (levels: TT.Level[] = [], position: T.Position): number | null => {\n  let progress = 0\n  let isLevelComplete = false\n  if (levels && levels.length) {\n    const totalLevels = levels.length\n    const findLevel = (level: TT.Level) => level.id === position.levelId\n    const currentLevel: TT.Level | undefined = levels.find(findLevel)\n    let currentLevelIndex: number = levels.findIndex(findLevel)\n    if (!currentLevel) {\n      // something went wrong, just return null\n      console.error('Invalid level match between levels & position')\n      return null\n    }\n    // check if the level is complete\n    if (position.stepId && currentLevel.steps && currentLevel.steps.length) {\n      const lastStepInLevel: TT.Step | null = currentLevel.steps[currentLevel.steps.length - 1]\n      isLevelComplete = position.complete && lastStepInLevel.id === position.stepId\n    } else {\n      isLevelComplete = position.complete\n    }\n    progress = Math.round(((currentLevelIndex + (isLevelComplete ? 1 : 0)) / totalLevels) * 100)\n  }\n  return progress\n}\n\nexport default getProgress\n","import * as React from 'react'\nimport * as CR from 'typings'\nimport * as TT from 'typings/tutorial'\nimport { Progress } from '@alifd/next'\nimport BetaBadge from '../../components/BetaBadge'\nimport { css, jsx } from '@emotion/core'\nimport Button from '../../components/Button'\nimport { Theme } from '../../styles/theme'\nimport { ADMIN_MODE } from '../../environment'\nimport AdminToggle from '../../services/admin/AdminToggle'\nimport getProgress from './getProgress'\n\nconst styles = {\n  page: (theme: Theme) => ({\n    position: 'relative' as 'relative',\n    display: 'grid' as 'grid',\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr 1fr 1fr 1fr',\n    gridTemplateAreas: `\n      \".\" \"header\" \"options\" \"hidden-options\";\n    `,\n    justifyItems: 'center',\n    width: '100%',\n    maxWidth: '100%',\n    height: '100vh',\n    backgroundColor: theme['$color-white'],\n  }),\n  header: {\n    gridArea: 'header',\n    flex: 1,\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'flex-end' as 'flex-end',\n    alignItems: 'center' as 'center',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    padding: '0.5rem',\n  },\n  title: {\n    fontSize: '3rem',\n    fontWeight: 'bold' as 'bold',\n  },\n  subtitle: {\n    fontSize: '1.3rem',\n    textAlign: 'center' as 'center',\n  },\n  options: {\n    gridArea: 'options',\n    flex: 1,\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'flex-start' as 'flex-start',\n    alignItems: 'center' as 'center',\n  },\n  buttonLarge: (theme: Theme) => ({\n    padding: '0.2rem 1rem',\n    border: `solid 1px ${theme['$color-line1-3']}`,\n    borderRadius: '3px',\n    minHeight: '2rem',\n    fontSize: '16px',\n    backgroundColor: 'white',\n    lineHeight: '1.5rem',\n    color: theme['$color-text1-4'],\n    '&:hover,&:focus': css({\n      backgroundColor: theme['$color-fill1-1'],\n      borderColor: theme['$color-line1-4'],\n      outline: 'none',\n      boxShadow: 'none',\n    }),\n  }),\n  continueTitle: (theme: Theme) => ({\n    color: theme['$color-text1-3'],\n    fontSize: '12px',\n  }),\n  buttonContainer: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n    margin: '0.5rem',\n  },\n  hiddenOptions: (theme: Theme) => ({\n    gridArea: 'hidden-options',\n    display: 'flex' as 'flex',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n    width: '6rem',\n    padding: '0.5rem',\n    marginTop: '8rem',\n    borderTopLeftRadius: '8px',\n    borderTopRightRadius: '8px',\n    backgroundColor: theme['$color-fill1-1'],\n  }),\n}\n\ninterface Props {\n  onContinue(): void\n  onNew(): void\n  tutorial: TT.Tutorial | null\n  progress: number | null\n}\n\nexport const StartPage = (props: Props) => (\n  <div css={styles.page}>\n    <div css={styles.header}>\n      <BetaBadge>\n        <span css={styles.title}>CodeRoad</span>\n      </BetaBadge>\n      <h3 css={styles.subtitle}>Play Tutorials in VSCode</h3>\n      <p>Learn in a real environment.</p>\n      <p>Instant feedback on save.</p>\n      <p>Build your portfolio and Git timeline.</p>\n    </div>\n\n    <div css={styles.options}>\n      <div css={styles.buttonContainer}>\n        <Button size=\"large\" type=\"primary\" onClick={props.onNew} style={{ padding: '0 2.5rem' }}>\n          Start New Tutorial\n        </Button>\n      </div>\n      {!!props.tutorial && props.progress !== null && (\n        <div css={styles.buttonContainer}>\n          <button onClick={props.onContinue} css={styles.buttonLarge}>\n            Continue Tutorial\n            <div css={styles.continueTitle}>\"{props.tutorial.summary.title}\"</div>\n            <Progress style={{ marginLeft: '1rem' }} percent={props.progress || 0} hasBorder size=\"large\" />\n          </button>\n        </div>\n      )}\n    </div>\n    {ADMIN_MODE ? (\n      <div css={styles.hiddenOptions}>\n        <AdminToggle />\n      </div>\n    ) : null}\n  </div>\n)\n\ninterface ContainerProps {\n  context: CR.MachineContext\n  send(action: CR.Action | string): void\n}\n\nconst StartPageContainer = ({ context, send }: ContainerProps) => {\n  const progress = getProgress(context?.tutorial?.levels, context.position)\n  return (\n    <StartPage\n      onContinue={() => send({ type: 'CONTINUE_TUTORIAL' })}\n      onNew={() => send({ type: 'NEW_TUTORIAL' })}\n      tutorial={context.tutorial}\n      progress={progress}\n    />\n  )\n}\n\nexport default StartPageContainer\n","import * as React from 'react'\nimport * as yaml from 'js-yaml'\n\nconst useFetch = <T>(url: string, options: object = {}): { data: T | null; error: string | null; loading: boolean } => {\n  const [data, setData] = React.useState(null)\n  const [error, setError] = React.useState(null)\n  const [loading, setLoading] = React.useState(true)\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options)\n        // sometimes returns longer content-types such as \"text/plain; charset=utf-8\"\n        const contentType = res.headers.get('content-type')?.split(';')[0]\n        let data\n        switch (contentType) {\n          case 'application/json':\n            data = await res.json()\n            break\n          case 'text/plain':\n          case 'text/yaml':\n            const text = await res.text()\n            data = yaml.safeLoad(text)\n            break\n          default:\n            throw new Error(`Unsupported content-type \"${contentType}\"`)\n        }\n\n        setLoading(false)\n        setData(data)\n      } catch (error) {\n        setError(error)\n      }\n    }\n    fetchData()\n  }, [url])\n  return { data, error, loading }\n}\n\nexport default useFetch\n","import * as React from 'react'\nimport { Form, Select } from '@alifd/next'\nimport useFetch from '../../../services/hooks/useFetch'\nimport { TUTORIAL_LIST_URL } from '../../../environment'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\n\ntype TutorialItem = { id: string; title: string; description: string; url: string }\ntype TutorialList = TutorialItem[]\n\ninterface Props {\n  onTutorialLoad(url: string): void\n}\n\nconst TutorialSelect = (props: Props) => {\n  // load tutorial from a path to a tutorial list json\n  const { data, error, loading } = useFetch<TutorialList>(TUTORIAL_LIST_URL)\n  // TODO: display errors\n  const selectState = loading ? 'loading' : error || !data ? 'error' : undefined\n  return (\n    <Form style={{ maxWidth: '500px' }}>\n      <FormItem label=\"Select Tutorial:\">\n        <Select\n          onChange={props.onTutorialLoad}\n          style={{ width: '100%' }}\n          placeholder=\"Tutorials...\"\n          state={selectState}\n          size=\"large\"\n        >\n          {data &&\n            data.map((tutorial) => (\n              <Option key={tutorial.url} value={tutorial.url}>\n                {tutorial.title}\n              </Option>\n            ))}\n        </Select>\n      </FormItem>\n    </Form>\n  )\n}\n\nexport default TutorialSelect\n","import * as React from 'react'\nimport { Button, Form, Input } from '@alifd/next'\nimport logger from '../../../services/logger'\n\nconst FormItem = Form.Item\n\ninterface Props {\n  defaultUrl: string\n  onTutorialLoad(url: string): void\n}\n\nconst urlRegex = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\\.json/\n\nconst TutorialUrl = (props: Props) => {\n  const [url, setUrl] = React.useState(props.defaultUrl)\n  const [inputState, setInputState] = React.useState<undefined | 'success' | 'error'>()\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    logger(`Tutorial url: ${url}`)\n    props.onTutorialLoad(url)\n  }\n\n  const handleChange = (text: string) => {\n    setUrl(text)\n    !!text.match(urlRegex) ? setInputState('success') : setInputState('error')\n  }\n\n  return (\n    // @ts-ignore seems to be an onSubmit event ts error in lib\n    <Form style={{ maxWidth: '600px' }} onSubmit={onSubmit}>\n      <FormItem label=\"URL path to coderoad config.json\">\n        <Input\n          size=\"large\"\n          placeholder=\"https://raw.githubusercontent.com/coderoad/fcc-learn-npm/master/coderoad-config.json\"\n          defaultValue={props.defaultUrl}\n          onChange={handleChange}\n          state={inputState}\n          aria-label=\"input url path to coderoad config.json\"\n        />\n      </FormItem>\n      <Button htmlType=\"submit\" type=\"primary\" disabled={inputState !== 'success'}>\n        Load\n      </Button>{' '}\n      &nbsp;&nbsp;\n    </Form>\n  )\n}\n\nexport default TutorialUrl\n","import * as React from 'react'\nimport * as TT from 'typings/tutorial'\nimport { css, jsx } from '@emotion/core'\nimport { Icon, Form } from '@alifd/next'\nimport { Theme } from '../../../styles/theme'\n\nconst FormItem = Form.Item\n\ninterface Props {\n  onLoadSummary(data: TT.Tutorial): void\n}\n\nconst styles = {\n  form: {\n    maxWidth: '600px',\n    padding: '0 0.3rem',\n  },\n  uploadLabel: (theme: Theme) => ({\n    padding: '0.3rem 0.5rem',\n    outline: `1.5px solid ${theme['$color-line1-3']}`,\n    fontSize: theme['$form-element-medium-font-size'],\n    fontFamily: theme['$font-family-base'],\n    color: theme['$color-text1-3'],\n  }),\n  uploadButton: {\n    display: 'none',\n  },\n}\n\nconst TutorialFile = (props: Props) => {\n  const onChange = (evt: any) => {\n    evt.preventDefault()\n    const files = evt.target.files\n\n    if (!files.length) {\n      alert('No file select')\n      return\n    }\n    const uploadedFile = files[0]\n    const reader = new FileReader()\n    reader.onload = (e: any) => {\n      // TODO: handle errors from invalid JSON\n      const fileJson: TT.Tutorial = JSON.parse(e.target.result)\n      props.onLoadSummary(fileJson)\n    }\n    reader.readAsText(uploadedFile)\n  }\n\n  return (\n    <Form css={styles.form}>\n      <FormItem label=\"Load coderoad config.json\">\n        <br />\n        <label css={styles.uploadLabel}>\n          <Icon type=\"upload\" size=\"xs\" />\n          &nbsp;&nbsp;Upload\n          <input css={styles.uploadButton} type=\"file\" accept=\"application/json\" onChange={onChange} />\n        </label>\n        <br />\n      </FormItem>\n      <br />\n    </Form>\n  )\n}\n\nexport default TutorialFile\n","import * as TT from 'typings/tutorial'\nimport * as React from 'react'\nimport { Radio } from '@alifd/next'\nimport TutorialSelect from './forms/TutorialSelect'\nimport TutorialUrl from './forms/TutorialUrl'\nimport TutorialFile from './forms/TutorialFile'\n\nconst styles = {\n  formWrapper: {\n    padding: '1rem',\n    width: '100%',\n    height: 'auto',\n  },\n}\n\ninterface Props {\n  tab: string\n  setTab(tab: 'list' | 'url'): void\n  url: string | null\n  onTutorialLoadFromUrl(url: string): void\n  onLoadSummary(data: TT.Tutorial | null): void\n}\n\nconst SelectTutorialForm = (props: Props) => {\n  return (\n    <div css={styles.formWrapper}>\n      <Radio.Group\n        style={{ marginLeft: 8 }}\n        shape=\"button\"\n        value={props.tab}\n        // @ts-ignore ts lib validation issue\n        onChange={props.setTab}\n      >\n        <Radio value=\"list\">List</Radio>\n        <Radio value=\"url\">URL</Radio>\n        <Radio value=\"file\">File</Radio>\n      </Radio.Group>\n      <br />\n      <br />\n      {props.tab === 'list' && <TutorialSelect onTutorialLoad={props.onTutorialLoadFromUrl} />}\n      {props.tab === 'url' && <TutorialUrl onTutorialLoad={props.onTutorialLoadFromUrl} defaultUrl={props.url || ''} />}\n      {props.tab === 'file' && <TutorialFile onLoadSummary={props.onLoadSummary} />}\n    </div>\n  )\n}\n\nexport default SelectTutorialForm\n","import * as React from 'react'\nimport * as TT from 'typings/tutorial'\nimport { Breadcrumb } from '@alifd/next'\nimport Button from '../../../components/Button'\nimport Markdown from '../../../components/Markdown'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  page: {\n    position: 'relative' as 'relative',\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    width: '100%',\n    height: '100%',\n  },\n  nav: (theme: Theme) => ({\n    height: theme['$nav-height'],\n  }),\n  navLink: (theme: Theme) => ({\n    fontSize: theme['$font-size-caption'],\n    lineHeight: theme['$font-lineheight-1'],\n    color: 'white',\n    cursor: 'pointer',\n  }),\n  content: {\n    height: '100%',\n    paddingBottom: '5rem',\n  },\n  header: (theme: Theme) => ({\n    color: theme['$color-white'],\n    backgroundColor: theme['$color-brand1-9'],\n    padding: '1rem 1rem 1.5rem 1rem',\n  }),\n  title: {},\n  description: {\n    fontSize: '1rem',\n  },\n  meta: {\n    display: 'flex' as 'flex',\n    flexDirection: 'row' as 'row',\n    flexWrap: 'wrap' as 'wrap',\n  },\n  levelList: {\n    padding: '0rem 1rem',\n  },\n  levelSummary: {\n    paddingLeft: '1.1rem',\n  },\n  footer: (theme: Theme) => ({\n    position: 'fixed' as 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    display: 'flex' as 'flex',\n    flexDirection: 'row' as 'row',\n    alignItems: 'center' as 'center',\n    justifyContent: 'flex-end' as 'flex-end',\n    height: theme['$footer-height'],\n    padding: '0rem 0.5rem',\n    paddingRight: '2rem',\n    backgroundColor: theme['$color-black'],\n    width: '100%',\n    zIndex: 100,\n  }),\n}\n\ninterface Props {\n  tutorial: TT.Tutorial\n  onNext(): void\n  onClear(): void\n}\n\nconst Summary = (props: Props) => (\n  <div css={styles.page}>\n    <div css={styles.content}>\n      <div css={styles.header}>\n        <div css={styles.nav}>\n          <Breadcrumb separator=\"/\">\n            <Breadcrumb.Item>\n              <div css={styles.navLink} onClick={props.onClear}>\n                &lt; Back to Tutorials\n              </div>\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n        <Markdown>{`# ${props.tutorial.summary.title}`}</Markdown>\n        <Markdown>{`### ${props.tutorial.summary.description}`}</Markdown>\n        {/* <h5 css={styles.meta}>\n          <div css={{ marginRight: '2rem' }}>Created by {props.createdBy.name}</div>\n          <div>Last updated {moment(props.updatedAt).format('M/YYYY')}</div>\n        </h5> */}\n      </div>\n      <div>\n        <div css={styles.levelList}>\n          <h2>Content</h2>\n          {props.tutorial.levels.map((level: TT.Level, index: number) => (\n            <div key={index}>\n              <Markdown>{`### ${index + 1}. ${level.title}`}</Markdown>\n              <div css={styles.levelSummary}>\n                <Markdown>{level.summary}</Markdown>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n\n    <footer css={styles.footer}>\n      {/* TODO Add back button */}\n      <Button type=\"primary\" onClick={props.onNext}>\n        Start\n      </Button>\n    </footer>\n  </div>\n)\n\nexport default Summary\n","import * as React from 'react'\nimport { Dialog } from '@alifd/next'\nimport useFetch from '../../services/hooks/useFetch'\nimport * as TT from 'typings/tutorial'\nimport LoadingPage from '../Loading'\n\ninterface Props {\n  url: string\n  onLoadSummary(data: TT.Tutorial): void\n  onReturnToSelection(): void\n}\n\nconst LoadTutorialSummary = (props: Props) => {\n  const { data, error, loading } = useFetch<TT.Tutorial>(props.url)\n  if (loading) {\n    return <LoadingPage text=\"Loading tutorial summary...\" />\n  }\n  if (error) {\n    console.log(`Failed to load tutorial summary: ${error}`)\n    return <div>Error loading summary</div>\n  }\n  if (!data) {\n    return (\n      <Dialog\n        title=\"Tutorial Not Found\"\n        visible={true}\n        closeable={false}\n        footerActions={['ok']}\n        onOk={props.onReturnToSelection}\n      >\n        No data returned for tutorial\n      </Dialog>\n    )\n  } else {\n    // quick validation\n    if (!data?.config?.repo) {\n      return (\n        <Dialog\n          title=\"Invalid Tutorial\"\n          visible={true}\n          closeable={false}\n          footerActions={['ok']}\n          onOk={props.onReturnToSelection}\n        >\n          Loaded data does not match tutorial format\n        </Dialog>\n      )\n    }\n    props.onLoadSummary(data)\n  }\n  return null\n}\n\nexport default LoadTutorialSummary\n","import * as TT from 'typings/tutorial'\n// @ts-ignore\nimport gitUrlParser from 'git-url-parse'\n\nconst processTutorial = (tutorial: TT.Tutorial): TT.Tutorial => {\n  // define tutorial id as the \"owner/repo-name\"\n  // see docs at https://github.com/IonicaBizau/git-url-parse\n  const { repo } = tutorial.config\n  const { full_name } = gitUrlParser(repo.uri)\n  tutorial.id = `${full_name}:${repo.branch}`\n\n  return tutorial\n}\n\nexport default processTutorial\n","import * as TT from 'typings/tutorial'\nimport * as React from 'react'\nimport SelectTutorialForm from './SelectTutorialForm'\nimport TutorialOverview from './TutorialOverview'\nimport LoadTutorialSummary from './LoadTutorialSummary'\nimport processTutorial from '../../services/tutorial'\n\nconst styles = {\n  page: {\n    position: 'relative' as 'relative',\n    height: 'auto',\n    width: '100%',\n  },\n  selectPage: {\n    padding: '1rem',\n  },\n}\n\ninterface Props {\n  send: any\n  context: any\n}\n\nconst SelectTutorialPage = (props: Props) => {\n  const [data, setData] = React.useState<TT.Tutorial | null>()\n  const [page, setPage] = React.useState<'form' | 'loading' | 'summary'>('form')\n  const [tab, setTab] = React.useState<'list' | 'url'>('list')\n  const [url, setUrl] = React.useState<string | null>(null)\n\n  const onNext = () => {\n    props.send({\n      type: 'TUTORIAL_START',\n      payload: {\n        tutorial: data,\n      },\n    })\n  }\n  const onTutorialLoadFromUrl = (url: string) => {\n    setUrl(url)\n    setPage('loading')\n  }\n  const onLoadSummary = (d: TT.Tutorial) => {\n    setData(processTutorial(d))\n    setPage('summary')\n  }\n  const onClear = () => {\n    setData(null)\n    setPage('form')\n  }\n  return (\n    <div css={styles.page}>\n      {page === 'form' && (\n        <SelectTutorialForm\n          url={url}\n          onLoadSummary={onLoadSummary}\n          onTutorialLoadFromUrl={onTutorialLoadFromUrl}\n          tab={tab}\n          setTab={setTab}\n        />\n      )}\n      {page === 'loading' && url && (\n        <LoadTutorialSummary url={url} onLoadSummary={onLoadSummary} onReturnToSelection={() => setPage('form')} />\n      )}\n      {page === 'summary' && data && <TutorialOverview onNext={onNext} tutorial={data} onClear={onClear} />}\n    </div>\n  )\n}\n\nexport default SelectTutorialPage\n","import * as React from 'react'\nimport { Menu, Icon, Drawer } from '@alifd/next'\nimport { useTheme } from 'emotion-theming'\nimport { Theme } from '../../../styles/theme'\n\nconst { Item, Divider } = Menu\n\nconst styles = {\n  drawer: {\n    padding: 0,\n  },\n  menu: {\n    margin: 0,\n    height: '100%',\n  },\n  active: (theme: Theme) => ({\n    color: theme['$color-white'],\n    backgroundColor: theme['$color-brand1-9'],\n  }),\n  itemText: {\n    marginLeft: '0.5rem',\n  },\n}\n\ninterface Props {\n  visible: boolean\n  toggleVisible(visible: boolean): void\n  page: 'about' | 'level' | 'review' | 'settings'\n  setPage(page: 'about' | 'level' | 'review' | 'settings'): void\n}\n\nconst SideMenu = (props: Props) => {\n  const onMenuClose = () => {\n    props.toggleVisible(false)\n  }\n  const theme: Theme = useTheme()\n  return (\n    <Drawer\n      bodyStyle={styles.drawer}\n      title=\"Menu\"\n      visible={props.visible}\n      placement=\"left\"\n      closeable=\"mask\"\n      onClose={onMenuClose}\n    >\n      <Menu style={styles.menu} defaultOpenKeys=\"sub-menu\">\n        <Item\n          key=\"level\"\n          disabled={props.page === 'level'}\n          style={props.page === 'level' ? styles.active(theme) : {}}\n          onClick={() => {\n            onMenuClose()\n            props.setPage('level')\n          }}\n        >\n          <Icon type=\"detail\" size=\"small\" color=\"#EBEBEB\" />\n          <span style={styles.itemText}>Level</span>\n        </Item>\n        <Item\n          key=\"review\"\n          disabled={props.page === 'review'}\n          style={props.page === 'review' ? styles.active(theme) : {}}\n          onClick={() => {\n            onMenuClose()\n            props.setPage('review')\n          }}\n        >\n          <Icon type=\"list\" size=\"small\" color=\"#EBEBEB\" />\n          <span style={styles.itemText}>Review</span>\n        </Item>\n        <Divider key=\"divider\" />\n        <Item\n          key=\"about\"\n          disabled={props.page === 'about'}\n          style={props.page === 'about' ? styles.active(theme) : {}}\n          onClick={() => {\n            onMenuClose()\n            props.setPage('about')\n          }}\n        >\n          <Icon type=\"prompt\" size=\"xs\" color=\"#EBEBEB\" />\n          <span style={styles.itemText}>About</span>\n        </Item>\n        {/* <Item\n          key=\"settings\"\n          disabled={props.page === 'settings'}\n          style={props.page === 'settings' ? styles.active : {}}\n          onClick={() => {\n            onMenuClose()\n            props.setPage('settings')\n          }}\n        >\n          <Icon type=\"set\" size=\"small\" color=\"#EBEBEB\" />\n          <span style={styles.itemText}>Settings</span>\n        </Item>{' '}\n        */}\n      </Menu>\n    </Drawer>\n  )\n}\n\nexport default SideMenu\n","import * as React from 'react'\nimport Markdown from '../../../components/Markdown'\n\nconst styles = {\n  text: {\n    padding: '0rem 1rem',\n    paddingBottom: '1rem',\n    width: '100%',\n  },\n  title: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold' as 'bold',\n    lineHeight: '1.2rem',\n  },\n}\n\ninterface Props {\n  title: string\n  content: string\n}\n\nconst Content = (props: Props) => {\n  if (!props.content.length) {\n    return null\n  }\n  return (\n    <div css={styles.text}>\n      <h2 css={styles.title}>{props.title}</h2>\n      <Markdown>{props.content || ''}</Markdown>\n    </div>\n  )\n}\n\nexport default Content\n","import { Icon as AlifdIcon } from '@alifd/next'\nimport * as React from 'react'\n\ninterface Props {\n  type: string\n  role?: string\n  style?: React.CSSProperties\n  size?: 'xxs' | 'xs' | 'small' | 'medium' | 'large' | 'xl' | 'xxl' | 'xxxl' | 'inherit'\n}\n\nconst Icon = (props: Props) => {\n  return <AlifdIcon type={props.type} role={props.role} size={props.size} style={props.style} />\n}\n\nexport default Icon\n","import * as React from 'react'\nimport { useTheme } from 'emotion-theming'\nimport Icon from '../../../components/Icon'\nimport { Theme } from '../../../styles/theme'\n\ninterface Props {\n  size: 'small' | 'xs'\n  status: 'COMPLETE' | 'ACTIVE' | 'INCOMPLETE' | 'FAIL'\n}\n\nconst styles = {\n  complete: (theme: Theme) => ({\n    icon: 'success-filling',\n    color: theme['$color-success-3'],\n  }),\n  active: (theme: Theme) => ({\n    icon: 'success-filling',\n    color: theme['$color-disabled-1'],\n  }),\n  fail: (theme: Theme) => ({\n    icon: 'warning',\n    color: theme['$color-warning-3'],\n  }),\n  incomplete: (theme: Theme) => ({\n    icon: 'lock',\n    color: theme['$color-disabled-1'],\n  }),\n}\n\nconst TestStatusIcon = (props: Props) => {\n  const theme: Theme = useTheme()\n  // @ts-ignore(\n  const style: { icon: string; color: string } = styles[props.status.toLowerCase()](theme)\n  return <Icon type={style.icon} size={props.size} style={{ color: style.color }} />\n}\n\nexport default TestStatusIcon\n","import * as React from 'react'\nimport * as T from 'typings'\nimport { css, jsx } from '@emotion/core'\nimport TestStatusIcon from './TestStatusIcon'\nimport Markdown from '../../../components/Markdown'\n\ninterface Props {\n  content: string\n  status: T.ProgressStatus\n  subtasks?: T.SubtaskUI[]\n  displayAll?: boolean\n}\n\nconst styles = {\n  card: {\n    display: 'grid',\n    gridTemplateColumns: '25px 1fr',\n    padding: '1rem 1rem 1rem 0rem',\n  },\n  content: {\n    margin: 0,\n  },\n  statusContainer: {\n    paddingTop: 0,\n    width: '1rem',\n  },\n  subtasks: {\n    marginTop: '1rem',\n  },\n  subtask: {\n    marginBottom: '1rem',\n    display: 'flex',\n  },\n  options: {\n    display: 'flex' as 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center' as 'center',\n    padding: '0.5rem',\n  },\n}\n\nconst Step = (props: Props) => {\n  const showStep = props.displayAll || props.status !== 'INCOMPLETE'\n  if (!showStep) {\n    return null\n  }\n  return (\n    <div>\n      <div css={styles.card}>\n        <div css={styles.statusContainer}>\n          <TestStatusIcon size=\"small\" status={props.status} />\n        </div>\n        <div>\n          {/* content */}\n          <div css={styles.content}>\n            <Markdown>{props.content || ''}</Markdown>\n          </div>\n          {/* subtasks */}\n          {props.subtasks ? (\n            <ul css={styles.subtasks}>\n              {props.subtasks.map((subtask) => {\n                return (\n                  <li key={subtask.name} css={styles.subtask}>\n                    <TestStatusIcon size=\"xs\" status={subtask.status} />\n                    <span style={{ marginLeft: '0.5rem' }}>\n                      <Markdown>{subtask.name}</Markdown>\n                    </span>\n                  </li>\n                )\n              })}\n            </ul>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Step\n","import * as React from 'react'\nimport { css, jsx } from '@emotion/core'\nimport Markdown from '../../../components/Markdown'\nimport Button from '../../../components/Button'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  hints: {\n    marginTop: '0.5rem',\n  },\n  hintList: {\n    marginBottom: '0.5rem',\n  },\n  hint: (theme: Theme) => ({\n    marginBottom: '0.5rem',\n    backgroundColor: theme['$color-warning-1'],\n    padding: '0 0.5rem',\n  }),\n}\n\ninterface Props {\n  hints: string[]\n}\n\nconst Hints = (props: Props) => {\n  // hold state for hints for the level\n  const [hintIndex, setHintIndex] = React.useState<number>(-1)\n\n  if (!props.hints || !props.hints.length) {\n    return null\n  }\n\n  const isFinalHint = props.hints.length - 1 === hintIndex\n\n  const nextHint = () => {\n    if (isFinalHint) {\n      return\n    }\n    setHintIndex(hintIndex + 1)\n  }\n\n  return (\n    <div css={styles.hints}>\n      <div css={styles.hintList}>\n        {/* only show revealed hints */}\n        {props.hints.map((hint, index) => {\n          if (index > hintIndex) {\n            // hint not yet revealed\n            return null\n          }\n          return (\n            <div key={index} css={styles.hint}>\n              <Markdown>{`${index + 1}.&nbsp;${hint}`}</Markdown>\n            </div>\n          )\n        })}\n      </div>\n      <Button onClick={nextHint} disabled={isFinalHint}>\n        Get A Hint\n      </Button>\n    </div>\n  )\n}\n\nexport default Hints\n","import * as React from 'react'\nimport * as T from 'typings'\nimport Step from './Step'\nimport Hints from './Hints'\n\ninterface Props {\n  steps: T.StepUI[]\n  displayAll?: boolean\n}\n\nconst styles = {\n  steps: {\n    padding: '1rem 1rem',\n  },\n}\n\nconst Steps = (props: Props) => {\n  if (!props.steps.length) {\n    return null\n  }\n  return (\n    <div css={styles.steps}>\n      {/* @ts-ignore typings are different between UI & data */}\n      {props.steps.map((step: T.StepUI) => {\n        if (!step) {\n          return null\n        }\n        return (\n          <div key={step.id}>\n            <Step\n              key={step.id}\n              status={step.status}\n              displayAll={props.displayAll || false}\n              content={step.content}\n              subtasks={step.subtasks}\n            />\n            <Hints hints={step.hints || []} />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Steps\n","import * as React from 'react'\nimport * as T from 'typings'\nimport { css, jsx } from '@emotion/core'\nimport Content from './Content'\nimport Steps from './Steps'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  page: (theme: Theme) => ({\n    backgroundColor: theme['$color-white'],\n    position: 'relative' as 'relative',\n    height: 'auto',\n    width: '100%',\n  }),\n  content: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    padding: 0,\n  },\n\n  text: {\n    padding: '0rem 1rem',\n    paddingBottom: '1rem',\n  },\n  separator: {\n    height: 0,\n    borderBottom: '1px solid rgba(0, 0, 0, 0.1)',\n  },\n\n  title: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold' as 'bold',\n    lineHeight: '1.2rem',\n  },\n}\n\ntype Props = {\n  level: T.LevelUI\n}\n\nconst Level = ({ level }: Props) => {\n  return (\n    <div css={styles.page}>\n      <div css={styles.content}>\n        <Content title={level.title} content={level.content} />\n\n        {level.content.length && level.steps.length ? <div css={styles.separator} /> : null}\n\n        <Steps steps={level.steps} />\n      </div>\n    </div>\n  )\n}\n\nexport default Level\n","import * as React from 'react'\nimport Markdown from '../../../components/Markdown'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  container: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    backgroundColor: theme['$color-white'],\n    height: 'auto',\n  }),\n  header: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: '2rem',\n    backgroundColor: theme['$color-fill1-2'],\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    padding: '10px 0.4rem',\n  }),\n  content: {\n    padding: '0.5rem',\n  },\n}\n\ninterface Props {}\n\nconst AboutPage = (props: Props) => {\n  return (\n    <div css={styles.container}>\n      <div css={styles.header}>\n        <div>About CodeRoad</div>\n      </div>\n      <div css={styles.content}>\n        <Markdown>\n          {`\nCodeRoad is an open source VSCode extension that allows you to **create** and **play** interactive coding tutorials inside VSCode.\n\nLearn more or contribute at [https://github.com/coderoad/coderoad-vscode](https://github.com/coderoad/coderoad-vscode).\n\n##### Why CodeRoad?\n\nInteractive learning is the most effective way to gain new skills and knowledge. CodeRoad aims to help tutorial creators develop and share interactive content with the community.\n\nFor learners, there are a number of advantages to running tutorials inside VSCode:\n\na. Learn in a real world coding environment\nb. Get rapid feedback on save and helpful error messages\nc.Users own the code, and can build a Git timeline and deploy a portfolio\n\n##### Subscribe\n\nJoin our [mailing list](https://tiny.cc/coderoad) to hear about new tutorials & features. \n\n##### Contact\n\nWe'd love to hear your feedback. \n\nFor bugs/feature requests, reach out on GitHub.\n\nOtherwise, email us at [coderoadapp@gmail.com](mailto:coderoadapp@gmail.com).\n\n`}\n        </Markdown>\n      </div>\n    </div>\n  )\n}\n\nexport default AboutPage\n","import * as React from 'react'\nimport * as T from 'typings'\nimport { Button, Icon } from '@alifd/next'\nimport Step from '../components/Step'\nimport Hints from '../components/Hints'\nimport Content from '../components/Content'\nimport { Theme } from '../../../styles/theme'\nimport AdminContext from '../../../services/admin/context'\n\ninterface Props {\n  levels: T.LevelUI[]\n  onResetToPosition(position: T.Position): void\n}\n\nconst styles = {\n  container: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    height: 'auto',\n    backgroundColor: theme['$color-white'],\n    paddingBottom: '2rem',\n  }),\n  header: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    height: '2rem',\n    backgroundColor: theme['$color-fill1-2'],\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    padding: '10px 0.4rem',\n  }),\n  title: {\n    marginLeft: '0.5rem',\n  },\n  control: {\n    display: 'flex' as 'flex',\n    alignItems: 'center',\n    fontSize: '70%',\n  },\n  levels: {},\n  steps: {\n    padding: '1rem 1rem',\n  },\n  adminNav: {\n    position: 'absolute' as 'absolute',\n    right: '1rem',\n    lineHeight: '16px',\n  },\n}\n\nconst ReviewPage = (props: Props) => {\n  const {\n    state: { adminMode },\n  } = React.useContext(AdminContext)\n  const show = (status: T.ProgressStatus): boolean => {\n    return adminMode || status !== 'INCOMPLETE'\n  }\n  return (\n    <div css={styles.container}>\n      <div css={styles.header}>\n        <div>Review</div>\n      </div>\n\n      <div css={styles.levels}>\n        {props.levels.map((level: T.LevelUI, index: number) =>\n          show(level.status) ? (\n            <div key={level.id}>\n              {adminMode && (\n                <div css={styles.adminNav}>\n                  <Button\n                    type=\"normal\"\n                    warning\n                    onClick={() =>\n                      props.onResetToPosition({\n                        levelId: level.id,\n                        stepId: level.steps.length ? level.steps[0].id : null,\n                        complete: false,\n                      })\n                    }\n                  >\n                    {level.id}&nbsp;\n                    <Icon type=\"refresh\" />\n                  </Button>\n                </div>\n              )}\n              <Content title={level.title} content={level.content} />\n\n              <div css={styles.steps}>\n                {level.steps.map((step: T.StepUI) => {\n                  if (!step) {\n                    return null\n                  }\n                  return show(step.status) ? (\n                    <div key={step.id}>\n                      {adminMode && (\n                        <>\n                          <div css={styles.adminNav}>\n                            <Button\n                              type=\"normal\"\n                              warning\n                              onClick={() =>\n                                props.onResetToPosition({ levelId: level.id, stepId: step.id, complete: false })\n                              }\n                            >\n                              {step.id}&nbsp;\n                              <Icon type=\"refresh\" />\n                            </Button>\n                          </div>\n                          <br />\n                        </>\n                      )}\n                      <Step\n                        key={step.id}\n                        status={step.status}\n                        displayAll={true}\n                        content={step.content}\n                        subtasks={step.subtasks}\n                      />\n                      <Hints hints={step.hints || []} />\n                    </div>\n                  ) : null\n                })}\n              </div>\n\n              {index < props.levels.length - 1 ? <hr /> : null}\n            </div>\n          ) : null,\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ReviewPage\n","import * as React from 'react'\nimport Icon from '../Icon'\nimport { css, jsx } from '@emotion/core'\nimport { useTheme } from 'emotion-theming'\nimport { Theme } from '../../styles/theme'\n\nconst styles = {\n  container: (theme: Theme) => ({\n    backgroundColor: theme['$color-warning-1'],\n    padding: '0.5rem',\n    animationDuration: '0.3s',\n    animationTimingFunction: 'ease-in-out',\n    borderTopLeftRadius: theme['$corner-1'],\n    borderTopRightRadius: theme['$corner-1'],\n    color: theme['$color-text1-3'],\n    fontSize: theme['$font-size-caption'],\n  }),\n  icon: (theme: Theme) => ({\n    color: theme['$color-warning-3'],\n  }),\n  content: {\n    padding: '0 0.5rem',\n  },\n}\n\ninterface Props {\n  message?: string\n}\n\nconst TestMessage = (props: Props) => {\n  const [visible, setVisible] = React.useState(true)\n\n  React.useEffect(() => {\n    setVisible(true)\n    const timeout = setTimeout(() => {\n      setVisible(false)\n    }, 4500)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [props.message])\n\n  const theme: Theme = useTheme()\n  return visible && props.message ? (\n    <div css={styles.container}>\n      <Icon type=\"warning\" style={styles.icon(theme)} size=\"xs\" />\n      <span css={styles.content}>{props.message}</span>\n    </div>\n  ) : null\n}\n\nexport default TestMessage\n","import * as React from 'react'\nimport { Progress } from '@alifd/next'\nimport useMedia from 'use-media'\nimport { useTheme } from 'emotion-theming'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  progress: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    justifyContent: 'flex-end' as 'flex-end',\n    alignItems: 'center' as 'center',\n    width: '150px',\n    color: theme['$color-white'],\n    marginRight: '-16px',\n  }),\n  text: (theme: Theme) => ({\n    color: theme['$color-white'],\n    marginRight: '5px',\n    fontSize: '10px',\n  }),\n}\n\ninterface Props {\n  current: number\n  max: number\n}\n\nconst StepProgress = (props: Props) => {\n  const theme: Theme = useTheme()\n  const isWide = useMedia({ minWidth: '340px' })\n\n  const Text = (\n    <span style={styles.text(theme)}>\n      {props.current} of {props.max}\n    </span>\n  )\n\n  if (isWide) {\n    return (\n      <Progress\n        state=\"success\"\n        progressive\n        percent={(props.current / props.max) * 100}\n        shape=\"line\"\n        color={theme['$color-brand1-9']}\n        css={styles.progress}\n        textRender={() => {\n          return Text\n        }}\n      />\n    )\n  }\n  return <div css={styles.text}>{Text}</div>\n}\n\nexport default StepProgress\n","import * as T from 'typings'\nimport * as TT from 'typings/tutorial'\n\ninterface Input {\n  position: T.Position\n  levels: TT.Level[]\n  testStatus: T.TestStatus | null\n}\n\ntype Output = {\n  level: T.LevelUI\n  levels: T.LevelUI[]\n  levelIndex: number\n  stepIndex: number\n}\n\n/*\n * Format levels to include:\n * - level.status = 'ACTIVE' | 'COMPLETE' | 'INCOMPLETE'\n * - step.status = 'ACTIVE' | 'COMPLETE' | 'INCOMPLETE' | 'FAIL'\n * - step.subtasks as { name: string, status: 'ACTIVE' | 'COMPLETE' | 'INCOMPLETE' }[]\n */\nconst formatLevels = ({ position, levels, testStatus }: Input): Output => {\n  // clone levels\n\n  const levelIndex: number = levels.findIndex((l: TT.Level) => l.id === position.levelId)\n\n  if (levelIndex === -1) {\n    throw new Error(`Level ${position.levelId} not found`)\n  }\n\n  const currentLevel = levels[levelIndex]\n\n  let stepIndex = currentLevel.steps.findIndex((s: TT.Step) => s.id === position.stepId)\n  if (stepIndex === -1) {\n    stepIndex = levels[levelIndex].steps.length\n  }\n\n  if (position.complete) {\n    stepIndex += 1\n  }\n\n  // current level\n  const levelUI: T.LevelUI = {\n    ...currentLevel,\n    status: position.complete ? 'COMPLETE' : 'ACTIVE',\n    steps: currentLevel.steps.map((step: TT.Step, index) => {\n      // label step status for step component\n      let status: T.ProgressStatus = 'INCOMPLETE'\n      let subtasks\n      if (index < stepIndex) {\n        status = 'COMPLETE'\n      } else if (index === stepIndex) {\n        status = 'ACTIVE'\n      } else {\n        status = 'INCOMPLETE'\n      }\n      if (step.subtasks && step.subtasks) {\n        const testSummaries = Object.keys(testStatus?.summary || {})\n        if (testSummaries.length && testSummaries.length !== step.subtasks.length) {\n          // test result count and subtask count don't match\n          // something is wrong with the tutorial\n          // NOTE: hacky temp solution as should be caught by tutorial creators / build tools\n          console.error(\n            'ERROR: subtasks and test results have a different number of results. This is likely an error with the tutorial or an edited test file.',\n          )\n        }\n        subtasks = step.subtasks.map((subtask: string, subtaskIndex: number) => {\n          let subtaskStatus: T.ProgressStatus = 'INCOMPLETE'\n          // task is complete, subtasks must be complete\n          if (status === 'COMPLETE') {\n            subtaskStatus = 'COMPLETE'\n            // task is active, check which are complete from test results\n          } else if (status === 'ACTIVE') {\n            subtaskStatus = !!(testStatus?.summary && testStatus.summary[subtaskIndex]) ? 'COMPLETE' : 'ACTIVE'\n          }\n          return {\n            name: subtask,\n            status: subtaskStatus,\n          }\n        })\n      }\n      return { ...step, status, subtasks }\n    }),\n  }\n\n  // flag all levels before as complete\n  const completed: T.LevelUI[] = levels.slice(0, levelIndex).map((level: TT.Level) => ({\n    ...level,\n    status: 'COMPLETE',\n    steps: level.steps.map((step: TT.Step) => ({\n      ...step,\n      status: 'COMPLETE',\n      subtasks: step.subtasks ? step.subtasks.map((st) => ({ name: st, status: 'COMPLETE' })) : undefined,\n    })),\n  }))\n\n  // flag all levels after as incomplete\n  const incompleted: T.LevelUI[] = levels.slice(levelIndex + 1, levels.length).map((level: TT.Level) => ({\n    ...level,\n    status: 'INCOMPLETE',\n    steps: level.steps.map((step: TT.Step) => ({\n      ...step,\n      status: 'INCOMPLETE',\n      subtasks: step.subtasks ? step.subtasks.map((st) => ({ name: st, status: 'INCOMPLETE' })) : undefined,\n    })),\n  }))\n\n  const levelsUI: T.LevelUI[] = [...completed, levelUI, ...incompleted]\n\n  return { level: levelUI, levels: levelsUI, levelIndex, stepIndex }\n}\n\nexport default formatLevels\n","import * as React from 'react'\nimport { Button, Dialog, Message } from '@alifd/next'\n\ninterface Props {\n  disabled?: boolean\n  onReset(): void\n}\n\nconst Reset = (props: Props) => {\n  const [modalState, setModalState] = React.useState<'none' | 'confirm' | 'progress'>('none')\n\n  const onClose = () => {\n    setModalState('none')\n  }\n\n  const onOk = () => {\n    setModalState('progress')\n    props.onReset()\n    return setTimeout(() => {\n      setModalState('none')\n    }, 3000)\n  }\n\n  return (\n    <>\n      <Button\n        ghost=\"dark\"\n        type=\"secondary\"\n        size=\"medium\"\n        onClick={() => setModalState('confirm')}\n        disabled={props.disabled}\n      >\n        Reset\n      </Button>\n      <Dialog\n        visible={modalState === 'confirm'}\n        onOk={onOk}\n        onCancel={onClose}\n        onClose={onClose}\n        footerActions={['ok', 'cancel']}\n      >\n        <Message type=\"warning\" title=\"Are you sure you want to reset?\">\n          Resetting progress will replace your progress with the tutorial's standard progress. Your code may look\n          different after resetting.\n        </Message>\n      </Dialog>\n      <Dialog visible={modalState === 'progress'} footer={false} onClose={onClose} closeable={false}>\n        <Message type=\"loading\" title=\"Resetting...\" />\n      </Dialog>\n    </>\n  )\n}\n\nexport default Reset\n","import { useEffect, useState } from 'react'\n\ninterface ProgressConfig {\n  start?: number\n  stop: number\n  updateDuration?: number\n}\n\nconst useNaturalProgress = (config: ProgressConfig): number => {\n  const { start, stop, updateDuration } = config\n  const [progress, setProgress] = useState(start || 0)\n  useEffect(() => {\n    let timeout: any\n    let difference = (stop - progress) / 4\n    // for difference>0.01 update progress or make it stop\n    let newProgress = difference > 0.01 ? progress + difference : stop\n    if (progress < stop) {\n      timeout = setTimeout(() => {\n        setProgress(newProgress)\n      }, updateDuration || 100)\n    }\n    return () => {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n    }\n  }, [progress, stop, updateDuration])\n  return progress\n}\n\nexport default useNaturalProgress\n","import * as React from 'react'\nimport { Progress, Icon } from '@alifd/next'\nimport useNaturalProgress from 'services/hooks/useNaturalProgress'\n\ninterface Props {\n  current: number\n  max: number\n}\n\nconst ProgressPie = (props: Props) => {\n  const progress = useNaturalProgress({ stop: props.current })\n\n  const progressPercent = Math.floor((progress / props.max) * 100)\n\n  return (\n    <Progress\n      percent={progressPercent}\n      shape=\"circle\"\n      textRender={() => (progressPercent === 100 ? <Icon type=\"select\" size=\"xl\" /> : `${progressPercent}%`)}\n    />\n  )\n}\n\nexport default ProgressPie\n","import * as React from 'react'\nimport { Dialog, Icon } from '@alifd/next'\nimport { css, jsx } from '@emotion/core'\nimport Button from '../../../components/Button'\nimport ProgressPie from './ProgressPie'\n\nconst styles = {\n  content: {\n    display: 'flex' as 'flex',\n    flexDirection: 'column' as 'column',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n  },\n  message: {\n    textAlign: 'center' as 'center',\n  },\n  buttonSubtext: {\n    padding: '0.5rem',\n  },\n}\n\ninterface Props {\n  title: string\n  current: number // level index\n  max: number // level count\n  defaultOpen: boolean\n  disabled?: boolean\n  onContinue(): void\n}\n\nconst Continue = (props: Props) => {\n  const [modalState, setModalState] = React.useState<'init' | 'closed' | 'open'>(props.defaultOpen ? 'open' : 'closed')\n\n  const onClose = () => {\n    setModalState('closed')\n  }\n\n  const onOpen = () => {\n    setModalState('open')\n  }\n\n  const onContinue = () => {\n    props.onContinue()\n    onClose()\n  }\n\n  const isComplete = props.current === props.max\n\n  return (\n    <>\n      {modalState === 'init' ? (\n        <Button type=\"primary\" size=\"medium\" onClick={onOpen} disabled={props.disabled}>\n          Continue\n        </Button>\n      ) : null}\n      {modalState === 'closed' ? (\n        <Button type=\"primary\" size=\"medium\" onClick={onContinue} disabled={props.disabled}>\n          Continue\n        </Button>\n      ) : null}\n      <Dialog\n        title={isComplete ? 'Tutorial Complete!' : 'Level Complete!'}\n        visible={modalState === 'open'}\n        onClose={onClose}\n        footer={false}\n        css={{ padding: '1rem' }}\n      >\n        <div css={styles.content}>\n          <ProgressPie current={props.current} max={props.max} />\n\n          <div css={styles.message}>\n            <h3>{isComplete ? 'Congratulations!' : props.title}</h3>\n            <br />\n            <Button type=\"primary\" size=\"large\" onClick={onContinue}>\n              Continue&nbsp;&nbsp;\n              <Icon type=\"arrow-right\" />\n            </Button>\n            <div css={styles.buttonSubtext}>(ctrl + enter)</div>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Continue\n","import * as React from 'react'\nimport { Icon } from '@alifd/next'\n\nconst styles = {\n  scrollIndicator: {\n    position: 'fixed' as 'fixed',\n    display: 'flex' as 'flex',\n    justifyContent: 'center' as 'center',\n    alignItems: 'center' as 'center',\n    left: 'calc(50% - 8px)',\n    borderRadius: '100%',\n    zIndex: 100,\n    bottom: '2.2rem',\n    boxShadow: '0 0 0 5px transparent',\n  },\n}\n\ntype Props = {\n  item: string\n  children: React.ReactElement\n}\n\nconst ScrollContent = ({ item, children }: Props) => {\n  const [showScrollIndicator, setShowScrollIndicator] = React.useState<'UNDETERMINED' | 'SHOW' | 'HIDE'>('UNDETERMINED')\n  const pageTopRef: React.RefObject<any> = React.useRef(null)\n  const pageBottomRef: React.RefObject<any> = React.useRef(null)\n\n  const scrollToTop = () => {\n    pageTopRef.current.scrollIntoView({ behavior: 'smooth' })\n    let hideTimeout: any\n\n    // API to detect if an HTML element is in the viewport\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // show a scroll indicator to let the user know\n        // they can scroll down for more\n        const isVisible = entry.isIntersecting\n        if (!isVisible && showScrollIndicator === 'UNDETERMINED') {\n          setShowScrollIndicator('SHOW')\n        }\n        hideTimeout = setTimeout(() => {\n          setShowScrollIndicator('HIDE')\n          observer.unobserve(pageBottomRef.current)\n        }, 2000)\n      },\n      { rootMargin: '0px' },\n    )\n\n    const showTimeout = setTimeout(() => {\n      // detect if bottom of page is visible\n\n      if (pageBottomRef.current) {\n        observer.observe(pageBottomRef.current)\n      }\n    }, 600)\n    return () => {\n      // cleanup timeouts & subs\n      observer.unobserve(pageBottomRef.current)\n      clearTimeout(showTimeout)\n      clearTimeout(hideTimeout)\n    }\n  }\n\n  React.useEffect(scrollToTop, [item])\n\n  return (\n    <div css={{ position: 'relative' }}>\n      <div ref={pageTopRef} />\n      {children}\n      {showScrollIndicator === 'SHOW' ? (\n        <div style={styles.scrollIndicator}>\n          <Icon type=\"arrow-down\" size=\"small\" />\n        </div>\n      ) : null}\n      <div ref={pageBottomRef} />\n    </div>\n  )\n}\n\nexport default ScrollContent\n","import * as React from 'react'\nimport { css, jsx } from '@emotion/core'\nimport { Button, Icon } from '@alifd/next'\nimport { Theme } from '../../../styles/theme'\n\nconst styles = {\n  banner: (theme: Theme) => ({\n    height: 'auto',\n    width: '100%',\n    backgroundColor: theme['$color-brand1-9'],\n    color: theme['$color-white'],\n    padding: '0.5rem 1rem',\n  }),\n  header: {\n    position: 'relative' as 'relative',\n    width: '100%',\n  },\n  headerMessage: {\n    marginLeft: '0.5rem',\n  },\n  // close: {\n  //   position: 'absolute' as 'absolute',\n  //   right: '0.5rem',\n  //   top: '0.5rem',\n  //   padding: '2px',\n  // },\n  section: {\n    padding: '0rem 0.5rem 1rem 0.5rem',\n  },\n  options: {\n    display: 'flex' as 'flex',\n    flexDirection: 'row' as 'row',\n    flexWrap: 'wrap' as 'wrap',\n  },\n  optionsLeft: {\n    flex: 3,\n  },\n  optionsRight: {\n    flex: 1,\n    display: 'flex' as 'flex',\n    justifyContent: 'flex-end' as 'flex-end',\n    alignItems: 'flex-end' as 'flex-end',\n  },\n}\n\ninterface Props {\n  title: string\n  onRequestWorkspace(): void\n}\n\nconst CompletedBanner = (props: Props) => {\n  return (\n    <div css={styles.banner}>\n      <div css={styles.header}>\n        <h3>\n          <Icon type=\"success-filling\" size=\"large\" />\n          <span css={styles.headerMessage}>Congratulations on completing \"{props.title}\"!</span>\n        </h3>\n      </div>\n      <div css={styles.section}>\n        <h5>You've reached the end of the road...</h5>\n        <div css={styles.options}>\n          <div css={styles.optionsLeft}>\n            <p>To go down another path:</p>\n            <ul>\n              <li>- open a new VSCode workspace</li>\n              <li>- relaunch the CodeRoad app</li>\n              <li>- select a new tutorial</li>\n            </ul>\n          </div>\n          <div css={styles.optionsRight}>\n            <Button type=\"primary\" ghost=\"dark\" onClick={props.onRequestWorkspace}>\n              Open New Workspace\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CompletedBanner\n","import * as React from 'react'\nimport * as T from 'typings'\nimport * as selectors from '../../services/selectors'\nimport SideMenu from './components/SideMenu'\nimport Level from './components/Level'\nimport Icon from '../../components/Icon'\nimport AboutPage from './containers/About'\nimport ReviewPage from './containers/Review'\nimport Button from '../../components/Button'\nimport ProcessMessages from '../../components/ProcessMessages'\nimport TestMessage from '../../components/TestMessage'\nimport StepProgress from './components/StepProgress'\nimport { DISPLAY_RUN_TEST_BUTTON } from '../../environment'\nimport formatLevels from './formatLevels'\nimport Reset from './components/Reset'\nimport Continue from './components/Continue'\nimport ScrollContent from './components/ScrollContent'\nimport CompletedBanner from './components/CompletedBanner'\nimport { Theme } from '../../styles/theme'\nimport { useTheme } from 'emotion-theming'\n\nconst styles = {\n  page: {\n    width: '100%',\n    maxWidth: '100%',\n    height: 'auto',\n    paddingBottom: '5rem',\n  },\n  header: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: '2rem',\n    backgroundColor: theme['$color-fill1-4'],\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    padding: '10px 0.4rem',\n  }),\n  menuIcon: (theme: Theme) => ({\n    color: theme['$color-text1-4'],\n  }),\n  title: {\n    marginLeft: '0.5rem',\n  },\n  learn: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  footer: (theme: Theme) => ({\n    display: 'flex' as 'flex',\n    flexDirection: 'row' as 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: theme['$footer-height'],\n    backgroundColor: 'black',\n    fontSize: '12px',\n    lineHeight: '16px',\n    padding: '10px 0rem',\n    position: 'fixed' as 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    color: theme['$color-white'],\n    zIndex: 1000,\n  }),\n  completeFooter: {\n    position: 'fixed' as 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n  },\n  processes: (theme: Theme) => ({\n    padding: '0 1rem',\n    position: 'fixed' as 'fixed',\n    bottom: theme['$footer-height'],\n    left: 0,\n    right: 0,\n    top: 'auto',\n  }),\n  testMessage: (theme: Theme) => ({\n    position: 'fixed' as 'fixed',\n    top: 'auto',\n    bottom: theme['$footer-height'],\n    left: '5px',\n    right: '5px',\n  }),\n}\n\ninterface PageProps {\n  context: T.MachineContext\n  send(action: T.Action): void\n  state: string // 'Normal' | 'TestRunning' | 'Level.LevelComplete'\n}\n\n/**\n * NOTE: Unused commands\n * { type: 'STEP_SOLUTION_LOAD' }\n * { type: 'OPEN_LOGS', payload: { channel } }\n */\n\nconst TutorialPage = (props: PageProps) => {\n  const theme: Theme = useTheme()\n  const { position, processes, testStatus } = props.context\n\n  const tutorial = selectors.currentTutorial(props.context)\n\n  const onContinue = (): void => {\n    props.send({\n      type: 'NEXT_LEVEL',\n    })\n  }\n\n  const onRunTest = (): void => {\n    props.send({ type: 'RUN_TEST' })\n  }\n\n  const onReset = (): void => {\n    props.send({ type: 'RUN_RESET' })\n  }\n\n  const onResetToPosition = (position: T.Position): void => {\n    props.send({ type: 'RUN_RESET_TO_POSITION', payload: { position } })\n  }\n\n  const [menuVisible, setMenuVisible] = React.useState(false)\n\n  const [page, setPage] = React.useState<'about' | 'level' | 'review' | 'settings'>('level')\n\n  // format level code with status for easy rendering\n  const { level, levels, levelIndex, stepIndex } = formatLevels({\n    position,\n    levels: tutorial.levels,\n    testStatus,\n  })\n\n  const disableOptions = processes.length > 0 || props.state === 'Level.TestRunning'\n\n  return (\n    <div>\n      <div css={styles.page}>\n        <div css={styles.header}>\n          <a onClick={() => setMenuVisible(!menuVisible)}>\n            <Icon type=\"toggle-left\" size=\"small\" style={styles.menuIcon(theme)} />\n          </a>\n          <span css={styles.title}>{tutorial.summary.title}</span>\n        </div>\n\n        {page === 'about' && <AboutPage />}\n\n        {page === 'level' && (\n          <ScrollContent item={level.id}>\n            <Level level={level} />\n          </ScrollContent>\n        )}\n        {page === 'review' && <ReviewPage levels={levels} onResetToPosition={onResetToPosition} />}\n\n        {/* {page === 'settings' && <SettingsPage />} */}\n      </div>\n\n      {props.state === 'Completed' ? (\n        <div css={styles.completeFooter}>\n          <CompletedBanner\n            title={tutorial.summary.title || 'Unknown'}\n            onRequestWorkspace={() => props.send({ type: 'REQUEST_WORKSPACE' })}\n          />\n        </div>\n      ) : (\n        <footer css={styles.footer}>\n          {/* Process Modal */}\n          {processes.length > 0 && (\n            <div css={styles.processes}>\n              <ProcessMessages processes={processes} />\n            </div>\n          )}\n          {/* Test Fail Modal */}\n          {testStatus && testStatus.type === 'warning' && (\n            <div css={styles.testMessage}>\n              <TestMessage message={testStatus.title} />\n            </div>\n          )}\n          {/* Left */}\n          <div css={{ flex: 1 }}>\n            {DISPLAY_RUN_TEST_BUTTON && level.steps.length && level.status !== 'COMPLETE' ? (\n              <Button\n                style={{ marginLeft: '1rem', width: '57px' }}\n                type=\"primary\"\n                onClick={onRunTest}\n                disabled={disableOptions}\n              >\n                {props.state === 'Level.TestRunning' ? <Icon type=\"loading\" size=\"small\" /> : 'Run'}\n              </Button>\n            ) : null}\n          </div>\n\n          {/* Center */}\n          <div css={{ flex: 1, display: 'flex', justifyContent: 'center' }}>\n            <Reset onReset={onReset} disabled={disableOptions || props.state === 'Level.LevelComplete'} />\n          </div>\n\n          {/* Right */}\n          <div css={{ flex: 1, display: 'flex', justifyContent: 'flex-end' }}>\n            {!level.steps.length ? (\n              <div css={{ marginRight: '0.5rem' }}>\n                <Continue\n                  onContinue={onContinue}\n                  current={levelIndex + 1}\n                  max={levels.length}\n                  title={tutorial.summary.title}\n                  defaultOpen={false}\n                  disabled={processes.length > 0}\n                />\n              </div>\n            ) : props.state === 'Level.LevelComplete' ? (\n              <div css={{ marginRight: '0.5rem' }}>\n                <Continue\n                  onContinue={onContinue}\n                  current={levelIndex + 1}\n                  max={levels.length}\n                  title={tutorial.summary.title}\n                  defaultOpen={true}\n                  disabled={processes.length > 0}\n                />\n              </div>\n            ) : level.steps.length > 1 ? (\n              <StepProgress current={stepIndex} max={level.steps.length} />\n            ) : null}\n          </div>\n        </footer>\n      )}\n      <SideMenu visible={menuVisible} toggleVisible={setMenuVisible} page={page} setPage={setPage} />\n    </div>\n  )\n}\n\nexport default TutorialPage\n","import * as React from 'react'\nimport useStateMachine from './services/state/useStateMachine'\nimport { Router, Route } from './components/Router'\nimport ErrorView from './components/Error'\nimport LoadingPage from './containers/Loading'\nimport StartPage from './containers/Start'\nimport SelectTutorialPage from './containers/SelectTutorial'\nimport TutorialPage from './containers/Tutorial'\nimport logger from './services/logger'\n\n/*\n * NOTE: due to a lack of URLs and a dependency on xstate\n * we have to implement a custom router here\n */\nconst Routes = () => {\n  const { context, route, send } = useStateMachine()\n\n  // TODO: handle only full page errors\n  if (context.error) {\n    return <ErrorView send={send} error={context.error} />\n  }\n\n  logger(`ROUTE: ${route}`)\n  logger(`POSITION: ${JSON.stringify(context.position)}`)\n\n  return (\n    <Router route={route}>\n      {/* Setup */}\n      <Route paths={{ Setup: { Startup: true, ValidateSetup: true } }}>\n        <LoadingPage text=\"Launching...\" processes={context.processes} />\n      </Route>\n      <Route paths={{ Setup: { Start: true } }}>\n        <StartPage send={send} context={context} />\n      </Route>\n      <Route paths={{ Setup: { SelectTutorial: true } }}>\n        <SelectTutorialPage send={send} context={context} />\n      </Route>\n      <Route paths={{ Setup: { SetupNewTutorial: true, StartTutorial: true } }}>\n        <LoadingPage text=\"Configuring tutorial...\" />\n      </Route>\n      {/* Tutorial */}\n      <Route paths={{ Tutorial: { Level: { Load: true } } }}>\n        <LoadingPage text=\"Loading Level...\" processes={context.processes} />\n      </Route>\n      <Route paths={{ Tutorial: { Reset: true } }}>\n        <LoadingPage text=\"Resetting tutorial...\" processes={context.processes} />\n      </Route>\n      <Route paths={{ Tutorial: { Level: true, Completed: true } }}>\n        <TutorialPage send={send} context={context} state={route.replace('Tutorial.', '')} />\n      </Route>\n    </Router>\n  )\n}\n\nexport default Routes\n","import * as React from 'react'\nimport Provider from './Provider'\nimport Routes from './Routes'\n\nconst App = () => (\n  <Provider>\n    <Routes />\n  </Provider>\n)\n\nexport default App\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\n\n// mock values for non-extension web use\nimport './mock'\n\nimport App from './App'\n\n// init initial styles\nimport './styles/reset.css'\n// init listeners\nimport './services/listeners'\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement)\n"],"sourceRoot":""}